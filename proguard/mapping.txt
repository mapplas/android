com.commonsware.cwac.adapter.AdapterWrapper -> com.commonsware.cwac.adapter.a:
    android.widget.ListAdapter wrapped -> a
    java.lang.Object getItem(int) -> getItem
    int getCount() -> getCount
    int getViewTypeCount() -> getViewTypeCount
    int getItemViewType(int) -> getItemViewType
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    long getItemId(int) -> getItemId
    android.widget.ListAdapter getWrappedAdapter() -> a
com.commonsware.cwac.adapter.AdapterWrapper$1 -> com.commonsware.cwac.adapter.b:
    com.commonsware.cwac.adapter.AdapterWrapper this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.commonsware.cwac.adapter.demo.AdapterWrapperDemo -> com.commonsware.cwac.adapter.demo.AdapterWrapperDemo:
    void onCreate(android.os.Bundle) -> onCreate
com.commonsware.cwac.endless.EndlessAdapter -> com.commonsware.cwac.a.a:
    android.view.View pendingView -> a
    java.util.concurrent.atomic.AtomicBoolean keepOnAppending -> b
    android.content.Context context -> c
    int pendingResource -> d
    boolean isSerialized -> e
    boolean runInBackground -> f
    boolean cacheInBackground() -> b
    void appendCachedData() -> c
    void restartAppending() -> d
    void onDataReady() -> e
    int getCount() -> getCount
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    java.lang.Object getItem(int) -> getItem
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean onException$197c7093(java.lang.Exception) -> a
    android.view.View getPendingView(android.view.ViewGroup) -> a
    java.util.concurrent.atomic.AtomicBoolean access$0(com.commonsware.cwac.endless.EndlessAdapter) -> a
    android.view.View access$1(com.commonsware.cwac.endless.EndlessAdapter) -> b
com.commonsware.cwac.endless.EndlessAdapter$AppendTask -> com.commonsware.cwac.a.b:
    com.commonsware.cwac.endless.EndlessAdapter adapter -> a
    boolean tempKeep -> b
    java.lang.Exception doInBackground$65c3861d() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.j256.ormlite.android.AndroidCompiledStatement -> com.j256.ormlite.android.a:
    com.j256.ormlite.logger.Logger logger -> a
    java.lang.String sql -> b
    android.database.sqlite.SQLiteDatabase db -> c
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> d
    java.lang.String[] NO_STRING_ARGS -> e
    android.database.Cursor cursor -> f
    java.util.List args -> g
    java.lang.Integer max -> h
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> a
    int runExecute() -> a
    void close() -> b
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> a
    void setMaxRows(int) -> a
    android.database.Cursor getCursor() -> c
    java.lang.String toString() -> toString
    int execSql(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void isInPrep() -> d
com.j256.ormlite.android.AndroidCompiledStatement$1 -> com.j256.ormlite.android.b:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.android.AndroidConnectionSource -> com.j256.ormlite.android.c:
    com.j256.ormlite.logger.Logger logger -> a
    android.database.sqlite.SQLiteOpenHelper helper -> b
    android.database.sqlite.SQLiteDatabase sqliteDatabase -> c
    com.j256.ormlite.android.AndroidDatabaseConnection connection -> d
    boolean isOpen -> e
    com.j256.ormlite.db.DatabaseType databaseType -> f
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> a
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> b
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> a
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> b
    void close() -> c
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> d
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection -> com.j256.ormlite.android.d:
    com.j256.ormlite.logger.Logger logger -> b
    java.lang.String[] NO_STRING_ARGS -> c
    android.database.sqlite.SQLiteDatabase db -> d
    boolean readWrite -> e
    com.j256.ormlite.support.CompiledStatement compileStatement$7505a227(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> a
    com.j256.ormlite.support.CompiledStatement compileStatement$74b6de7e$7505a227(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> b
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> a
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> a
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> b
    java.lang.Object queryForOne$24323db(java.lang.String,java.lang.Object[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> a
    long queryForLong$4e6235d6(java.lang.String,java.lang.Object[]) -> a
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],java.lang.String) -> a
    void bindArgs(android.database.sqlite.SQLiteStatement,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> a
    java.lang.String[] toStrings(java.lang.Object[]) -> a
    java.lang.String toString() -> toString
com.j256.ormlite.android.AndroidDatabaseConnection$1 -> com.j256.ormlite.android.e:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.android.AndroidDatabaseResults -> com.j256.ormlite.android.f:
    android.database.Cursor cursor -> a
    java.lang.String[] columnNames -> b
    java.util.Map columnNameMap -> c
    com.j256.ormlite.dao.ObjectCache objectCache -> d
    com.j256.ormlite.db.DatabaseType databaseType -> e
    int getColumnCount() -> a
    boolean first() -> b
    boolean next() -> c
    int findColumn(java.lang.String) -> a
    java.lang.String getString(int) -> a
    boolean getBoolean(int) -> b
    char getChar(int) -> c
    byte getByte(int) -> d
    byte[] getBytes(int) -> e
    short getShort(int) -> f
    int getInt(int) -> g
    long getLong(int) -> h
    float getFloat(int) -> i
    double getDouble(int) -> j
    java.sql.Timestamp getTimestamp$49d1f431() -> d
    java.math.BigDecimal getBigDecimal$76f1efd4() -> e
    boolean wasNull(int) -> k
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> f
    java.lang.String toString() -> toString
    int lookupColumn(java.lang.String) -> b
com.j256.ormlite.android.DatabaseTableConfigUtil -> com.j256.ormlite.android.g:
    java.lang.Class annotationFactoryClazz -> a
    java.lang.reflect.Field elementsField -> b
    java.lang.Class annotationMemberClazz -> c
    java.lang.reflect.Field nameField -> d
    java.lang.reflect.Field valueField -> e
    int workedC -> f
    int[] configFieldNums -> g
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    int[] lookupClasses() -> a
    com.j256.ormlite.field.DatabaseFieldConfig configFromField$42d19e92$439784f8(java.lang.reflect.Field) -> a
    java.lang.String valueIfNotBlank(java.lang.String) -> a
com.j256.ormlite.android.DatabaseTableConfigUtil$DatabaseFieldSample -> com.j256.ormlite.android.h:
    java.lang.String field -> a
com.j256.ormlite.android.apptools.OpenHelperManager -> com.j256.ormlite.android.apptools.a:
    com.j256.ormlite.logger.Logger logger -> a
    java.lang.Class helperClass -> b
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> c
    boolean wasClosed -> d
    int instanceCount -> e
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper getHelper(android.content.Context) -> a
    void releaseHelper() -> a
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper constructHelper(android.content.Context,java.lang.Class) -> a
    java.lang.Class lookupHelperClass(android.content.Context,java.lang.Class) -> b
com.j256.ormlite.android.apptools.OrmLiteBaseActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> a
    boolean created -> b
    boolean destroyed -> c
    com.j256.ormlite.logger.Logger logger -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    java.lang.String toString() -> toString
com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup -> com.j256.ormlite.android.apptools.OrmLiteBaseActivityGroup:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> a
    boolean created -> b
    boolean destroyed -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.j256.ormlite.android.apptools.OrmLiteBaseListActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseListActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> a
    boolean created -> b
    boolean destroyed -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.j256.ormlite.android.apptools.OrmLiteBaseService -> com.j256.ormlite.android.apptools.OrmLiteBaseService:
    boolean created -> a
    boolean destroyed -> b
com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity -> com.j256.ormlite.android.apptools.OrmLiteBaseTabActivity:
    com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper helper -> a
    boolean created -> b
    boolean destroyed -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper -> com.j256.ormlite.android.apptools.b:
    com.j256.ormlite.logger.Logger logger -> a
    com.j256.ormlite.android.AndroidConnectionSource connectionSource -> b
    boolean isOpen -> c
    void onCreate$39896c6b(com.j256.ormlite.support.ConnectionSource) -> a
    com.j256.ormlite.support.ConnectionSource getConnectionSource() -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void close() -> close
    com.j256.ormlite.dao.Dao getDao(java.lang.Class) -> a
    java.lang.String toString() -> toString
com.j256.ormlite.dao.BaseDaoImpl -> com.j256.ormlite.a.a:
    boolean initialized -> i
    com.j256.ormlite.stmt.StatementExecutor statementExecutor -> a
    com.j256.ormlite.db.DatabaseType databaseType -> b
    java.lang.Class dataClass -> c
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> d
    com.j256.ormlite.table.TableInfo tableInfo -> e
    com.j256.ormlite.support.ConnectionSource connectionSource -> f
    com.j256.ormlite.dao.CloseableIterator lastIterator -> g
    com.j256.ormlite.table.ObjectFactory objectFactory -> h
    java.lang.ThreadLocal daoConfigLevelLocal -> j
    com.j256.ormlite.dao.ReferenceObjectCache defaultObjectCache -> k
    com.j256.ormlite.dao.ObjectCache objectCache -> l
    void initialize() -> h
    java.lang.Object queryForId(java.lang.Object) -> a
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> a
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> a
    int create(java.lang.Object) -> b
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> c
    int update(java.lang.Object) -> e
    int delete(java.lang.Object) -> d
    com.j256.ormlite.dao.CloseableIterator iterator() -> b
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> c
    com.j256.ormlite.dao.CloseableIterator iterator$1d1659d() -> i
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> b
    java.lang.Class getDataClass() -> d
    void clearAllInternalObjectCaches() -> e
    boolean idExists(java.lang.Object) -> f
    com.j256.ormlite.table.ObjectFactory getObjectFactory() -> f
    com.j256.ormlite.table.TableInfo getTableInfo() -> g
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> a
    void checkForInitialized() -> j
    com.j256.ormlite.dao.CloseableIterator createIterator$1d1659d() -> k
    com.j256.ormlite.dao.CloseableIterator createIterator$46cb65d9(com.j256.ormlite.stmt.PreparedQuery) -> c
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$1 -> com.j256.ormlite.a.b:
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.dao.BaseDaoImpl$4 -> com.j256.ormlite.a.c:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$5 -> com.j256.ormlite.a.d:
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.BaseDaoImpl$DaoConfigArray -> com.j256.ormlite.a.e:
    com.j256.ormlite.dao.BaseDaoImpl[] daoArray -> a
    int daoArrayC -> b
    void addDao(com.j256.ormlite.dao.BaseDaoImpl) -> a
    int size() -> a
    com.j256.ormlite.dao.BaseDaoImpl get(int) -> a
    void clear() -> b
com.j256.ormlite.dao.BaseForeignCollection -> com.j256.ormlite.a.f:
    com.j256.ormlite.dao.Dao dao -> a
    java.lang.String columnName -> b
    java.lang.Object parentId -> c
    com.j256.ormlite.stmt.PreparedQuery preparedQuery -> d
    java.lang.String orderColumn -> e
    boolean orderAscending -> f
    java.lang.Object parent -> g
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    com.j256.ormlite.stmt.PreparedQuery getPreparedQuery() -> a
com.j256.ormlite.dao.CloseableIterable -> com.j256.ormlite.a.g:
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> c
com.j256.ormlite.dao.CloseableIterator -> com.j256.ormlite.a.h:
    void close() -> a
    void moveToNext() -> b
com.j256.ormlite.dao.CloseableWrappedIterable -> com.j256.ormlite.a.i:
com.j256.ormlite.dao.Dao -> com.j256.ormlite.a.j:
    java.lang.Object queryForId(java.lang.Object) -> a
    com.j256.ormlite.stmt.QueryBuilder queryBuilder() -> a
    java.util.List query(com.j256.ormlite.stmt.PreparedQuery) -> a
    int create(java.lang.Object) -> b
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(java.lang.Object) -> c
    int delete(java.lang.Object) -> d
    com.j256.ormlite.dao.CloseableIterator iterator(com.j256.ormlite.stmt.PreparedQuery) -> b
    java.lang.Class getDataClass() -> d
com.j256.ormlite.dao.Dao$CreateOrUpdateStatus -> com.j256.ormlite.a.k:
    boolean created -> a
    boolean updated -> b
    int numLinesChanged -> c
com.j256.ormlite.dao.DaoManager -> com.j256.ormlite.a.l:
    java.util.Map configMap -> a
    java.util.Map classMap -> b
    java.util.Map tableConfigMap -> c
    com.j256.ormlite.logger.Logger logger -> d
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    com.j256.ormlite.dao.Dao createDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> a
    void registerDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> a
    void unregisterDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.Dao) -> b
    void clearDaoCache() -> a
    void addDaoToClassMap(com.j256.ormlite.dao.DaoManager$ClassConnectionSource,com.j256.ormlite.dao.Dao) -> a
    void addDaoToTableMap(com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource,com.j256.ormlite.dao.Dao) -> a
    com.j256.ormlite.dao.Dao lookupDao(com.j256.ormlite.dao.DaoManager$ClassConnectionSource) -> a
    java.lang.reflect.Constructor findConstructor(java.lang.Class,java.lang.Object[]) -> a
    com.j256.ormlite.dao.Dao doCreateDao(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.DatabaseTableConfig) -> b
com.j256.ormlite.dao.DaoManager$ClassConnectionSource -> com.j256.ormlite.a.m:
    com.j256.ormlite.support.ConnectionSource connectionSource -> a
    java.lang.Class clazz -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.DaoManager$TableConfigConnectionSource -> com.j256.ormlite.a.n:
    com.j256.ormlite.support.ConnectionSource connectionSource -> a
    com.j256.ormlite.table.DatabaseTableConfig tableConfig -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.j256.ormlite.dao.EagerForeignCollection -> com.j256.ormlite.a.o:
    java.util.List results -> b
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> c
    com.j256.ormlite.dao.CloseableIterator iteratorThrow() -> b
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
    java.util.List access$000(com.j256.ormlite.dao.EagerForeignCollection) -> a
com.j256.ormlite.dao.EagerForeignCollection$1 -> com.j256.ormlite.a.p:
    int offset -> b
    com.j256.ormlite.dao.EagerForeignCollection this$0 -> a
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
    void close() -> a
    void moveToNext() -> b
com.j256.ormlite.dao.ForeignCollection -> com.j256.ormlite.a.q:
com.j256.ormlite.dao.LazyForeignCollection -> com.j256.ormlite.a.r:
    com.j256.ormlite.dao.CloseableIterator lastIterator -> b
    com.j256.ormlite.dao.CloseableIterator closeableIterator() -> c
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.util.Iterator iterator() -> iterator
com.j256.ormlite.dao.ObjectCache -> com.j256.ormlite.a.s:
    java.lang.Object get(java.lang.Class,java.lang.Object) -> a
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> a
    void remove(java.lang.Class,java.lang.Object) -> b
com.j256.ormlite.dao.ReferenceObjectCache -> com.j256.ormlite.a.t:
    java.util.concurrent.ConcurrentHashMap classMaps -> a
    boolean useWeak -> b
    java.lang.Object get(java.lang.Class,java.lang.Object) -> a
    void put(java.lang.Class,java.lang.Object,java.lang.Object) -> a
    void clearAll() -> a
    void remove(java.lang.Class,java.lang.Object) -> b
    java.util.Map getMapForClass(java.lang.Class) -> a
com.j256.ormlite.db.BaseDatabaseType -> com.j256.ormlite.b.a:
    java.lang.String DEFAULT_SEQUENCE_SUFFIX -> a
    void appendColumnArg$573c7791(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> a
    void appendStringType$31674bd2(java.lang.StringBuilder,int) -> a
    void appendDateType$31674bd2(java.lang.StringBuilder,int) -> b
    void appendBooleanType$31674bd2(java.lang.StringBuilder) -> a
    void appendLongType$31674bd2(java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> a
    void configureGeneratedId$573c7791(java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> b
    void addPrimaryKeySql$77be7223(com.j256.ormlite.field.FieldType[],java.util.List) -> a
    boolean generatedIdSqlAtEnd() -> a
    void addUniqueComboSql$77be7223(com.j256.ormlite.field.FieldType[],java.util.List) -> b
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> a
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> b
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> a
    boolean isVarcharFieldWidthSupported() -> b
    void appendLimitValue$37ddfc93(java.lang.StringBuilder,long) -> a
    void appendOffsetValue(java.lang.StringBuilder,long) -> b
    boolean isCreateTableReturnsZero() -> c
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
com.j256.ormlite.db.BaseDatabaseType$1 -> com.j256.ormlite.b.b:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.db.BaseDatabaseType$BooleanNumberFieldConverter -> com.j256.ormlite.b.c:
    com.j256.ormlite.field.SqlType getSqlType() -> a
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
com.j256.ormlite.db.BaseSqliteDatabaseType -> com.j256.ormlite.b.d:
    com.j256.ormlite.field.FieldConverter booleanConverter -> b
    void appendLongType$31674bd2(java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> a
    void configureGeneratedId$573c7791(java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> b
    boolean generatedIdSqlAtEnd() -> a
    boolean isVarcharFieldWidthSupported() -> b
    boolean isCreateTableReturnsZero() -> c
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> a
com.j256.ormlite.db.BaseSqliteDatabaseType$1 -> com.j256.ormlite.b.e:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.db.DatabaseType -> com.j256.ormlite.b.f:
    void appendColumnArg$573c7791(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> a
    void addPrimaryKeySql$77be7223(com.j256.ormlite.field.FieldType[],java.util.List) -> a
    void addUniqueComboSql$77be7223(com.j256.ormlite.field.FieldType[],java.util.List) -> b
    void appendEscapedEntityName(java.lang.StringBuilder,java.lang.String) -> b
    void appendEscapedWord(java.lang.StringBuilder,java.lang.String) -> a
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> a
    void appendLimitValue$37ddfc93(java.lang.StringBuilder,long) -> a
    void appendOffsetValue(java.lang.StringBuilder,long) -> b
    boolean isCreateTableReturnsZero() -> c
    java.lang.String getDatabaseName() -> d
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
com.j256.ormlite.db.SqliteAndroidDatabaseType -> com.j256.ormlite.b.g:
    java.lang.String getDatabaseName() -> d
    void appendDateType$31674bd2(java.lang.StringBuilder,int) -> b
    void appendBooleanType$31674bd2(java.lang.StringBuilder) -> a
    com.j256.ormlite.field.FieldConverter getFieldConverter(com.j256.ormlite.field.DataPersister) -> a
    com.j256.ormlite.table.DatabaseTableConfig extractDatabaseTableConfig(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
com.j256.ormlite.db.SqliteAndroidDatabaseType$1 -> com.j256.ormlite.b.h:
    int[] $SwitchMap$com$j256$ormlite$field$SqlType -> a
com.j256.ormlite.field.BaseFieldConverter -> com.j256.ormlite.c.a:
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    boolean isStreamType() -> b
com.j256.ormlite.field.DataPersister -> com.j256.ormlite.c.b:
    java.lang.Class[] getAssociatedClasses() -> c
    java.lang.String[] getAssociatedClassNames() -> d
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> a
    java.lang.Object convertIdNumber(java.lang.Number) -> a
    boolean isValidGeneratedType() -> e
    boolean isValidForField(java.lang.reflect.Field) -> a
    boolean isEscapedDefaultValue() -> f
    boolean isEscapedValue() -> g
    boolean isPrimitive() -> h
    boolean isComparable() -> i
    boolean isAppropriateId() -> j
    boolean isArgumentHolderRequired() -> k
    boolean isSelfGeneratedId() -> l
    java.lang.Object generateId() -> m
    int getDefaultWidth() -> n
    boolean isValidForVersion() -> o
    java.lang.Object moveToNextValue(java.lang.Object) -> a
com.j256.ormlite.field.DataPersisterManager -> com.j256.ormlite.c.c:
    com.j256.ormlite.field.DataPersister DEFAULT_ENUM_PERSISTER -> a
    java.util.Map builtInMap -> b
    java.util.List registeredPersisters -> c
    com.j256.ormlite.field.DataPersister lookupForField(java.lang.reflect.Field) -> a
com.j256.ormlite.field.DataType -> com.j256.ormlite.c.d:
    com.j256.ormlite.field.DataType STRING -> a
    com.j256.ormlite.field.DataType LONG_STRING -> b
    com.j256.ormlite.field.DataType STRING_BYTES -> c
    com.j256.ormlite.field.DataType BOOLEAN -> d
    com.j256.ormlite.field.DataType BOOLEAN_OBJ -> e
    com.j256.ormlite.field.DataType DATE -> f
    com.j256.ormlite.field.DataType DATE_LONG -> g
    com.j256.ormlite.field.DataType DATE_STRING -> h
    com.j256.ormlite.field.DataType CHAR -> i
    com.j256.ormlite.field.DataType CHAR_OBJ -> j
    com.j256.ormlite.field.DataType BYTE -> k
    com.j256.ormlite.field.DataType BYTE_ARRAY -> l
    com.j256.ormlite.field.DataType BYTE_OBJ -> m
    com.j256.ormlite.field.DataType SHORT -> n
    com.j256.ormlite.field.DataType SHORT_OBJ -> o
    com.j256.ormlite.field.DataType INTEGER -> p
    com.j256.ormlite.field.DataType INTEGER_OBJ -> q
    com.j256.ormlite.field.DataType LONG -> r
    com.j256.ormlite.field.DataType LONG_OBJ -> s
    com.j256.ormlite.field.DataType FLOAT -> t
    com.j256.ormlite.field.DataType FLOAT_OBJ -> u
    com.j256.ormlite.field.DataType DOUBLE -> v
    com.j256.ormlite.field.DataType DOUBLE_OBJ -> w
    com.j256.ormlite.field.DataType SERIALIZABLE -> x
    com.j256.ormlite.field.DataType ENUM_STRING -> y
    com.j256.ormlite.field.DataType ENUM_INTEGER -> z
    com.j256.ormlite.field.DataType UUID -> A
    com.j256.ormlite.field.DataType BIG_INTEGER -> B
    com.j256.ormlite.field.DataType BIG_DECIMAL -> C
    com.j256.ormlite.field.DataType BIG_DECIMAL_NUMERIC -> D
    com.j256.ormlite.field.DataType DATE_TIME -> E
    com.j256.ormlite.field.DataType SQL_DATE -> F
    com.j256.ormlite.field.DataType TIME_STAMP -> G
    com.j256.ormlite.field.DataType UNKNOWN -> H
    com.j256.ormlite.field.DataPersister dataPersister -> I
    com.j256.ormlite.field.DataType[] $VALUES -> J
    com.j256.ormlite.field.DataType[] values() -> values
    com.j256.ormlite.field.DataType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.field.DataPersister getDataPersister() -> a
com.j256.ormlite.field.DatabaseField -> com.j256.ormlite.c.e:
    java.lang.String columnName() -> a
    com.j256.ormlite.field.DataType dataType() -> b
    java.lang.String defaultValue() -> c
    int width() -> d
    boolean canBeNull() -> e
    boolean id() -> f
    boolean generatedId() -> g
    java.lang.String generatedIdSequence() -> h
    boolean foreign() -> i
    boolean useGetSet() -> j
    java.lang.String unknownEnumName() -> k
    boolean throwIfNull() -> l
    boolean persisted() -> m
    java.lang.String format() -> n
    boolean unique() -> o
    boolean uniqueCombo() -> p
    boolean index() -> q
    boolean uniqueIndex() -> r
    java.lang.String indexName() -> s
    java.lang.String uniqueIndexName() -> t
    boolean foreignAutoRefresh() -> u
    int maxForeignAutoRefreshLevel() -> v
    java.lang.Class persisterClass() -> w
    boolean allowGeneratedIdInsert() -> x
    java.lang.String columnDefinition() -> y
    boolean foreignAutoCreate() -> z
    boolean version() -> A
    java.lang.String foreignColumnName() -> B
com.j256.ormlite.field.DatabaseFieldConfig -> com.j256.ormlite.c.f:
    java.lang.Class DEFAULT_PERSISTER_CLASS -> a
    com.j256.ormlite.field.DataType DEFAULT_DATA_TYPE -> b
    java.lang.String fieldName -> c
    java.lang.String columnName -> d
    com.j256.ormlite.field.DataType dataType -> e
    com.j256.ormlite.field.DataPersister dataPersister -> f
    java.lang.String defaultValue -> g
    int width -> h
    boolean canBeNull -> i
    boolean id -> j
    boolean generatedId -> k
    java.lang.String generatedIdSequence -> l
    boolean foreign -> m
    com.j256.ormlite.table.DatabaseTableConfig foreignTableConfig -> n
    boolean useGetSet -> o
    java.lang.Enum unknownEnumValue -> p
    boolean throwIfNull -> q
    boolean persisted -> r
    java.lang.String format -> s
    boolean unique -> t
    boolean uniqueCombo -> u
    boolean index -> v
    java.lang.String indexName -> w
    boolean uniqueIndex -> x
    java.lang.String uniqueIndexName -> y
    boolean foreignAutoRefresh -> z
    int maxForeignAutoRefreshLevel -> A
    java.lang.Class persisterClass -> B
    boolean allowGeneratedIdInsert -> C
    java.lang.String columnDefinition -> D
    boolean foreignAutoCreate -> E
    boolean version -> F
    java.lang.String foreignColumnName -> G
    boolean foreignCollection -> H
    boolean foreignCollectionEager -> I
    int foreignCollectionMaxEagerLevel -> J
    java.lang.String foreignCollectionColumnName -> K
    java.lang.String foreignCollectionOrderColumnName -> L
    boolean foreignCollectionOrderAscending -> M
    java.lang.String foreignCollectionForeignFieldName -> N
    java.lang.String getFieldName() -> a
    void setFieldName(java.lang.String) -> a
    java.lang.String getColumnName() -> b
    void setColumnName(java.lang.String) -> b
    void setDataType(com.j256.ormlite.field.DataType) -> a
    com.j256.ormlite.field.DataPersister getDataPersister() -> c
    void setDataPersister(com.j256.ormlite.field.DataPersister) -> a
    java.lang.String getDefaultValue() -> d
    void setDefaultValue(java.lang.String) -> c
    int getWidth() -> e
    void setWidth(int) -> a
    boolean isCanBeNull() -> f
    void setCanBeNull(boolean) -> a
    boolean isId() -> g
    void setId(boolean) -> b
    boolean isGeneratedId() -> h
    void setGeneratedId(boolean) -> c
    java.lang.String getGeneratedIdSequence() -> i
    void setGeneratedIdSequence(java.lang.String) -> d
    boolean isForeign() -> j
    void setForeign(boolean) -> d
    com.j256.ormlite.table.DatabaseTableConfig getForeignTableConfig() -> k
    boolean isUseGetSet() -> l
    void setUseGetSet(boolean) -> e
    java.lang.Enum getUnknownEnumValue() -> m
    void setUnknownEnumValue(java.lang.Enum) -> a
    boolean isThrowIfNull() -> n
    void setThrowIfNull(boolean) -> f
    boolean isPersisted() -> o
    void setPersisted(boolean) -> g
    java.lang.String getFormat() -> p
    void setFormat(java.lang.String) -> e
    boolean isUnique() -> q
    void setUnique(boolean) -> h
    boolean isUniqueCombo() -> r
    void setUniqueCombo(boolean) -> i
    void setIndex(boolean) -> j
    java.lang.String getIndexName(java.lang.String) -> f
    void setIndexName(java.lang.String) -> g
    void setUniqueIndex(boolean) -> k
    java.lang.String getUniqueIndexName(java.lang.String) -> h
    void setUniqueIndexName(java.lang.String) -> i
    void setForeignAutoRefresh(boolean) -> l
    boolean isForeignAutoRefresh() -> s
    int getMaxForeignAutoRefreshLevel() -> t
    void setMaxForeignAutoRefreshLevel(int) -> b
    boolean isForeignCollection() -> u
    void setForeignCollection$1385ff() -> v
    boolean isForeignCollectionEager() -> w
    void setForeignCollectionEager$1385ff() -> x
    int getForeignCollectionMaxEagerLevel() -> y
    void setForeignCollectionColumnName(java.lang.String) -> j
    java.lang.String getForeignCollectionOrderColumnName() -> z
    boolean isForeignCollectionOrderAscending() -> A
    java.lang.String getForeignCollectionForeignFieldName() -> B
    java.lang.Class getPersisterClass() -> C
    void setPersisterClass(java.lang.Class) -> a
    boolean isAllowGeneratedIdInsert() -> D
    void setAllowGeneratedIdInsert(boolean) -> m
    java.lang.String getColumnDefinition() -> E
    void setColumnDefinition(java.lang.String) -> k
    boolean isForeignAutoCreate() -> F
    void setForeignAutoCreate(boolean) -> n
    boolean isVersion() -> G
    void setVersion(boolean) -> o
    java.lang.String getForeignColumnName() -> H
    void setForeignColumnName(java.lang.String) -> l
    com.j256.ormlite.field.DatabaseFieldConfig fromField$42d19e92$439784f8(java.lang.reflect.Field) -> a
    java.lang.reflect.Method findGetMethod(java.lang.reflect.Field,boolean) -> a
    java.lang.reflect.Method findSetMethod(java.lang.reflect.Field,boolean) -> b
    void postProcess() -> I
    java.lang.Enum findMatchingEnumVal(java.lang.reflect.Field,java.lang.String) -> a
    java.lang.String findIndexName(java.lang.String) -> m
    java.lang.String valueIfNotBlank(java.lang.String) -> n
    java.lang.String methodFromField(java.lang.reflect.Field,java.lang.String) -> b
com.j256.ormlite.field.FieldConverter -> com.j256.ormlite.c.g:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object resultToJava(com.j256.ormlite.field.FieldType,com.j256.ormlite.support.DatabaseResults,int) -> a
    com.j256.ormlite.field.SqlType getSqlType() -> a
    boolean isStreamType() -> b
com.j256.ormlite.field.FieldType -> com.j256.ormlite.c.h:
    boolean DEFAULT_VALUE_BOOLEAN -> a
    byte DEFAULT_VALUE_BYTE -> b
    char DEFAULT_VALUE_CHAR -> c
    short DEFAULT_VALUE_SHORT -> d
    int DEFAULT_VALUE_INT -> e
    long DEFAULT_VALUE_LONG -> f
    float DEFAULT_VALUE_FLOAT -> g
    double DEFAULT_VALUE_DOUBLE -> h
    com.j256.ormlite.support.ConnectionSource connectionSource -> i
    java.lang.String tableName -> j
    java.lang.reflect.Field field -> k
    java.lang.String columnName -> l
    com.j256.ormlite.field.DatabaseFieldConfig fieldConfig -> m
    boolean isId -> n
    boolean isGeneratedId -> o
    java.lang.String generatedIdSequence -> p
    java.lang.reflect.Method fieldGetMethod -> q
    java.lang.reflect.Method fieldSetMethod -> r
    com.j256.ormlite.field.DataPersister dataPersister -> s
    java.lang.Object defaultValue -> t
    java.lang.Object dataTypeConfigObj -> u
    com.j256.ormlite.field.FieldConverter fieldConverter -> v
    com.j256.ormlite.field.FieldType foreignIdField -> w
    com.j256.ormlite.table.TableInfo foreignTableInfo -> x
    com.j256.ormlite.field.FieldType foreignFieldType -> y
    com.j256.ormlite.dao.BaseDaoImpl foreignDao -> z
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> A
    java.lang.ThreadLocal threadLevelCounters -> B
    void configDaoInformation(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    java.lang.reflect.Field getField() -> a
    java.lang.String getFieldName() -> b
    java.lang.Class getType() -> c
    java.lang.String getColumnName() -> d
    com.j256.ormlite.field.DataPersister getDataPersister() -> e
    java.lang.Object getDataTypeConfigObj() -> f
    com.j256.ormlite.field.SqlType getSqlType() -> g
    java.lang.Object getDefaultValue() -> h
    int getWidth() -> i
    boolean isCanBeNull() -> j
    boolean isId() -> k
    boolean isGeneratedId() -> l
    boolean isGeneratedIdSequence() -> m
    java.lang.String getGeneratedIdSequence() -> n
    boolean isForeign() -> o
    void assignField(java.lang.Object,java.lang.Object,boolean,com.j256.ormlite.dao.ObjectCache) -> a
    java.lang.Object assignIdValue(java.lang.Object,java.lang.Number,com.j256.ormlite.dao.ObjectCache) -> a
    java.lang.Object extractRawJavaFieldValue(java.lang.Object) -> a
    java.lang.Object extractJavaFieldValue(java.lang.Object) -> b
    java.lang.Object extractJavaFieldToSqlArgValue(java.lang.Object) -> c
    java.lang.Object convertJavaFieldToSqlArgValue(java.lang.Object) -> d
    java.lang.Object moveToNextValue(java.lang.Object) -> e
    com.j256.ormlite.field.FieldType getForeignIdField() -> p
    boolean isEscapedValue() -> q
    java.lang.Enum getUnknownEnumVal() -> r
    java.lang.String getFormat() -> s
    boolean isUnique() -> t
    boolean isUniqueCombo() -> u
    java.lang.String getIndexName() -> v
    java.lang.String getUniqueIndexName() -> w
    boolean isEscapedDefaultValue() -> x
    boolean isComparable() -> y
    boolean isArgumentHolderRequired() -> z
    boolean isForeignCollection() -> A
    com.j256.ormlite.dao.BaseForeignCollection buildForeignCollection$373d5a69(java.lang.Object,java.lang.Object) -> a
    java.lang.Object resultToJava(com.j256.ormlite.support.DatabaseResults,java.util.Map) -> a
    boolean isSelfGeneratedId() -> B
    boolean isAllowGeneratedIdInsert() -> C
    java.lang.String getColumnDefinition() -> D
    boolean isForeignAutoCreate() -> E
    boolean isVersion() -> F
    java.lang.Object generateId() -> G
    java.lang.Object getFieldValueIfNotDefault(java.lang.Object) -> f
    boolean isObjectsFieldValueDefault(java.lang.Object) -> g
    int createWithForeignDao(java.lang.Object) -> h
    com.j256.ormlite.field.FieldType createFieldType$3adba617(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.lang.reflect.Field) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    boolean isFieldValueDefault(java.lang.Object) -> i
    com.j256.ormlite.field.FieldType findForeignFieldType(java.lang.Class,java.lang.Class,com.j256.ormlite.dao.BaseDaoImpl) -> a
    void assignDataType(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.DataPersister) -> a
com.j256.ormlite.field.FieldType$1 -> com.j256.ormlite.c.i:
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.FieldType$LevelCounters -> com.j256.ormlite.c.j:
    int autoRefreshLevel -> a
    int autoRefreshLevelMax -> b
    int foreignCollectionLevel -> c
    int foreignCollectionLevelMax -> d
com.j256.ormlite.field.ForeignCollectionField -> com.j256.ormlite.c.k:
    boolean eager() -> a
    int maxEagerForeignCollectionLevel() -> b
    int maxEagerLevel() -> c
    java.lang.String columnName() -> d
    java.lang.String orderColumnName() -> e
    boolean orderAscending() -> f
    java.lang.String foreignColumnName() -> g
    java.lang.String foreignFieldName() -> h
com.j256.ormlite.field.SqlType -> com.j256.ormlite.c.l:
    com.j256.ormlite.field.SqlType STRING -> a
    com.j256.ormlite.field.SqlType LONG_STRING -> b
    com.j256.ormlite.field.SqlType DATE -> c
    com.j256.ormlite.field.SqlType BOOLEAN -> d
    com.j256.ormlite.field.SqlType CHAR -> e
    com.j256.ormlite.field.SqlType BYTE -> f
    com.j256.ormlite.field.SqlType BYTE_ARRAY -> g
    com.j256.ormlite.field.SqlType SHORT -> h
    com.j256.ormlite.field.SqlType INTEGER -> i
    com.j256.ormlite.field.SqlType LONG -> j
    com.j256.ormlite.field.SqlType FLOAT -> k
    com.j256.ormlite.field.SqlType DOUBLE -> l
    com.j256.ormlite.field.SqlType SERIALIZABLE -> m
    com.j256.ormlite.field.SqlType BLOB -> n
    com.j256.ormlite.field.SqlType BIG_DECIMAL -> o
    com.j256.ormlite.field.SqlType OTHER -> p
    com.j256.ormlite.field.SqlType UNKNOWN -> q
    com.j256.ormlite.field.SqlType[] $VALUES -> r
    com.j256.ormlite.field.SqlType[] values() -> values
    com.j256.ormlite.field.SqlType valueOf(java.lang.String) -> valueOf
com.j256.ormlite.field.types.BaseDataType -> com.j256.ormlite.c.a.a:
    com.j256.ormlite.field.SqlType sqlType -> a
    java.lang.Class[] classes -> b
    boolean isValidForField(java.lang.reflect.Field) -> a
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> a
    com.j256.ormlite.field.SqlType getSqlType() -> a
    java.lang.Class[] getAssociatedClasses() -> c
    java.lang.String[] getAssociatedClassNames() -> d
    java.lang.Object convertIdNumber(java.lang.Number) -> a
    boolean isValidGeneratedType() -> e
    boolean isEscapedDefaultValue() -> f
    boolean isEscapedValue() -> g
    boolean isPrimitive() -> h
    boolean isComparable() -> i
    boolean isAppropriateId() -> j
    boolean isArgumentHolderRequired() -> k
    boolean isSelfGeneratedId() -> l
    java.lang.Object generateId() -> m
    int getDefaultWidth() -> n
    boolean isValidForVersion() -> o
    java.lang.Object moveToNextValue(java.lang.Object) -> a
com.j256.ormlite.field.types.BaseDateType -> com.j256.ormlite.c.a.b:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig convertDateStringConfig(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig) -> a
    java.util.Date parseDateString(com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig,java.lang.String) -> a
    boolean isValidForVersion() -> o
    java.lang.Object moveToNextValue(java.lang.Object) -> a
    boolean isValidForField(java.lang.reflect.Field) -> a
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig -> com.j256.ormlite.c.a.c:
    java.lang.ThreadLocal threadLocal -> b
    java.lang.String dateFormatStr -> a
    java.text.DateFormat getDateFormat() -> a
    java.lang.String toString() -> toString
com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig$1 -> com.j256.ormlite.c.a.d:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig this$0 -> a
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.field.types.BaseEnumType -> com.j256.ormlite.c.a.e:
    java.lang.Enum enumVal(com.j256.ormlite.field.FieldType,java.lang.Object,java.lang.Enum,java.lang.Enum) -> a
    boolean isValidForField(java.lang.reflect.Field) -> a
com.j256.ormlite.field.types.BigDecimalNumericType -> com.j256.ormlite.c.a.f:
    com.j256.ormlite.field.types.BigDecimalNumericType singleTon -> a
    com.j256.ormlite.field.types.BigDecimalNumericType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isAppropriateId() -> j
    boolean isEscapedValue() -> g
com.j256.ormlite.field.types.BigDecimalStringType -> com.j256.ormlite.c.a.g:
    int DEFAULT_WIDTH -> a
    com.j256.ormlite.field.types.BigDecimalStringType singleTon -> b
    com.j256.ormlite.field.types.BigDecimalStringType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    int getDefaultWidth() -> n
    boolean isAppropriateId() -> j
com.j256.ormlite.field.types.BigIntegerType -> com.j256.ormlite.c.a.h:
    int DEFAULT_WIDTH -> a
    com.j256.ormlite.field.types.BigIntegerType singleTon -> b
    com.j256.ormlite.field.types.BigIntegerType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    int getDefaultWidth() -> n
    boolean isAppropriateId() -> j
com.j256.ormlite.field.types.BooleanObjectType -> com.j256.ormlite.c.a.i:
    com.j256.ormlite.field.types.BooleanObjectType singleTon -> a
    com.j256.ormlite.field.types.BooleanObjectType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isEscapedValue() -> g
    boolean isAppropriateId() -> j
com.j256.ormlite.field.types.BooleanType -> com.j256.ormlite.c.a.j:
    com.j256.ormlite.field.types.BooleanType singleTon -> a
    com.j256.ormlite.field.types.BooleanType getSingleton() -> q
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.ByteArrayType -> com.j256.ormlite.c.a.k:
    com.j256.ormlite.field.types.ByteArrayType singleTon -> a
    com.j256.ormlite.field.types.ByteArrayType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isAppropriateId() -> j
    boolean isArgumentHolderRequired() -> k
com.j256.ormlite.field.types.ByteObjectType -> com.j256.ormlite.c.a.l:
    com.j256.ormlite.field.types.ByteObjectType singleTon -> a
    com.j256.ormlite.field.types.ByteObjectType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isEscapedValue() -> g
com.j256.ormlite.field.types.ByteType -> com.j256.ormlite.c.a.m:
    com.j256.ormlite.field.types.ByteType singleTon -> a
    com.j256.ormlite.field.types.ByteType getSingleton() -> q
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.CharType -> com.j256.ormlite.c.a.n:
    com.j256.ormlite.field.types.CharType singleTon -> a
    com.j256.ormlite.field.types.CharType getSingleton() -> p
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.CharacterObjectType -> com.j256.ormlite.c.a.o:
    com.j256.ormlite.field.types.CharacterObjectType singleTon -> a
    com.j256.ormlite.field.types.CharacterObjectType getSingleton() -> q
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
com.j256.ormlite.field.types.DateLongType -> com.j256.ormlite.c.a.p:
    com.j256.ormlite.field.types.DateLongType singleTon -> a
    com.j256.ormlite.field.types.DateLongType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isEscapedValue() -> g
com.j256.ormlite.field.types.DateStringType -> com.j256.ormlite.c.a.q:
    int DEFAULT_WIDTH -> a
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig defaultDateFormatConfig -> b
    com.j256.ormlite.field.types.DateStringType singleTon -> c
    com.j256.ormlite.field.types.DateStringType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> a
    int getDefaultWidth() -> n
com.j256.ormlite.field.types.DateTimeType -> com.j256.ormlite.c.a.r:
    com.j256.ormlite.field.types.DateTimeType singleTon -> a
    java.lang.Class dateTimeClass -> b
    java.lang.reflect.Method getMillisMethod -> c
    java.lang.reflect.Constructor millisConstructor -> d
    java.lang.String[] associatedClassNames -> e
    com.j256.ormlite.field.types.DateTimeType getSingleton() -> p
    java.lang.String[] getAssociatedClassNames() -> d
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    boolean isEscapedValue() -> g
    boolean isAppropriateId() -> j
    java.lang.Class getDateTimeClass() -> q
com.j256.ormlite.field.types.DateType -> com.j256.ormlite.c.a.s:
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig defaultDateFormatConfig -> a
    com.j256.ormlite.field.types.DateType singleTon -> b
    com.j256.ormlite.field.types.DateType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isArgumentHolderRequired() -> k
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> q
com.j256.ormlite.field.types.DoubleObjectType -> com.j256.ormlite.c.a.t:
    com.j256.ormlite.field.types.DoubleObjectType singleTon -> a
    com.j256.ormlite.field.types.DoubleObjectType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isEscapedValue() -> g
com.j256.ormlite.field.types.DoubleType -> com.j256.ormlite.c.a.u:
    com.j256.ormlite.field.types.DoubleType singleTon -> a
    com.j256.ormlite.field.types.DoubleType getSingleton() -> q
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.EnumIntegerType -> com.j256.ormlite.c.a.v:
    com.j256.ormlite.field.types.EnumIntegerType singleTon -> a
    com.j256.ormlite.field.types.EnumIntegerType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isEscapedValue() -> g
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> a
com.j256.ormlite.field.types.EnumStringType -> com.j256.ormlite.c.a.w:
    int DEFAULT_WIDTH -> a
    com.j256.ormlite.field.types.EnumStringType singleTon -> b
    com.j256.ormlite.field.types.EnumStringType getSingleton() -> p
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    java.lang.Object makeConfigObject(com.j256.ormlite.field.FieldType) -> a
    int getDefaultWidth() -> n
com.j256.ormlite.field.types.FloatObjectType -> com.j256.ormlite.c.a.x:
    com.j256.ormlite.field.types.FloatObjectType singleTon -> a
    com.j256.ormlite.field.types.FloatObjectType getSingleton() -> p
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    boolean isEscapedValue() -> g
com.j256.ormlite.field.types.FloatType -> com.j256.ormlite.c.a.y:
    com.j256.ormlite.field.types.FloatType singleTon -> a
    com.j256.ormlite.field.types.FloatType getSingleton() -> q
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.IntType -> com.j256.ormlite.c.a.z:
    com.j256.ormlite.field.types.IntType singleTon -> a
    com.j256.ormlite.field.types.IntType getSingleton() -> p
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.IntegerObjectType -> com.j256.ormlite.c.a.aa:
    com.j256.ormlite.field.types.IntegerObjectType singleTon -> a
    com.j256.ormlite.field.types.IntegerObjectType getSingleton() -> q
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object convertIdNumber(java.lang.Number) -> a
    boolean isEscapedValue() -> g
    boolean isValidGeneratedType() -> e
    boolean isValidForVersion() -> o
    java.lang.Object moveToNextValue(java.lang.Object) -> a
com.j256.ormlite.field.types.LongObjectType -> com.j256.ormlite.c.a.ab:
    com.j256.ormlite.field.types.LongObjectType singleTon -> a
    com.j256.ormlite.field.types.LongObjectType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object convertIdNumber(java.lang.Number) -> a
    boolean isEscapedValue() -> g
    boolean isValidGeneratedType() -> e
    boolean isValidForVersion() -> o
    java.lang.Object moveToNextValue(java.lang.Object) -> a
com.j256.ormlite.field.types.LongStringType -> com.j256.ormlite.c.a.ac:
    com.j256.ormlite.field.types.LongStringType singleTon -> b
    com.j256.ormlite.field.types.LongStringType getSingleton() -> p
    boolean isAppropriateId() -> j
    int getDefaultWidth() -> n
com.j256.ormlite.field.types.LongType -> com.j256.ormlite.c.a.ad:
    com.j256.ormlite.field.types.LongType singleTon -> a
    com.j256.ormlite.field.types.LongType getSingleton() -> q
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.SerializableType -> com.j256.ormlite.c.a.ae:
    com.j256.ormlite.field.types.SerializableType singleTon -> a
    com.j256.ormlite.field.types.SerializableType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isValidForField(java.lang.reflect.Field) -> a
    boolean isStreamType() -> b
    boolean isComparable() -> i
    boolean isAppropriateId() -> j
    boolean isArgumentHolderRequired() -> k
com.j256.ormlite.field.types.ShortObjectType -> com.j256.ormlite.c.a.af:
    com.j256.ormlite.field.types.ShortObjectType singleTon -> a
    com.j256.ormlite.field.types.ShortObjectType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isEscapedValue() -> g
    boolean isValidForVersion() -> o
    java.lang.Object moveToNextValue(java.lang.Object) -> a
com.j256.ormlite.field.types.ShortType -> com.j256.ormlite.c.a.ag:
    com.j256.ormlite.field.types.ShortType singleTon -> a
    com.j256.ormlite.field.types.ShortType getSingleton() -> q
    boolean isPrimitive() -> h
com.j256.ormlite.field.types.SqlDateType -> com.j256.ormlite.c.a.ah:
    com.j256.ormlite.field.types.SqlDateType singleTon -> a
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig sqlDateFormatConfig -> b
    com.j256.ormlite.field.types.SqlDateType getSingleton() -> r
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    com.j256.ormlite.field.types.BaseDateType$DateStringFormatConfig getDefaultDateFormatConfig() -> q
    boolean isValidForField(java.lang.reflect.Field) -> a
com.j256.ormlite.field.types.StringBytesType -> com.j256.ormlite.c.a.ai:
    com.j256.ormlite.field.types.StringBytesType singleTon -> a
    com.j256.ormlite.field.types.StringBytesType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isAppropriateId() -> j
    boolean isArgumentHolderRequired() -> k
    java.lang.String getCharsetName(com.j256.ormlite.field.FieldType) -> b
com.j256.ormlite.field.types.StringType -> com.j256.ormlite.c.a.aj:
    int DEFAULT_WIDTH -> a
    com.j256.ormlite.field.types.StringType singleTon -> b
    com.j256.ormlite.field.types.StringType getSingleton() -> q
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    int getDefaultWidth() -> n
com.j256.ormlite.field.types.TimeStampType -> com.j256.ormlite.c.a.ak:
    com.j256.ormlite.field.types.TimeStampType singleTon -> a
    com.j256.ormlite.field.types.TimeStampType getSingleton() -> r
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isValidForField(java.lang.reflect.Field) -> a
com.j256.ormlite.field.types.UuidType -> com.j256.ormlite.c.a.al:
    int DEFAULT_WIDTH -> a
    com.j256.ormlite.field.types.UuidType singleTon -> b
    com.j256.ormlite.field.types.UuidType getSingleton() -> p
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    java.lang.Object sqlArgToJava(com.j256.ormlite.field.FieldType,java.lang.Object,int) -> a
    java.lang.Object javaToSqlArg(com.j256.ormlite.field.FieldType,java.lang.Object) -> a
    boolean isValidGeneratedType() -> e
    boolean isSelfGeneratedId() -> l
    java.lang.Object generateId() -> m
    int getDefaultWidth() -> n
com.j256.ormlite.field.types.VoidType -> com.j256.ormlite.c.a.am:
    java.lang.Object parseDefaultString(com.j256.ormlite.field.FieldType,java.lang.String) -> a
    java.lang.Object resultToSqlArg$6e4db97a(com.j256.ormlite.support.DatabaseResults,int) -> a
    boolean isValidForField(java.lang.reflect.Field) -> a
com.j256.ormlite.logger.LocalLog -> com.j256.ormlite.d.a:
    com.j256.ormlite.logger.Log$Level DEFAULT_LEVEL -> a
    java.lang.ThreadLocal dateFormatThreadLocal -> b
    java.io.PrintStream printStream -> c
    java.util.List classLevels -> d
    java.lang.String className -> e
    com.j256.ormlite.logger.Log$Level level -> f
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> a
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> a
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> a
    java.util.List readLevelResourceFile(java.io.InputStream) -> a
    java.util.List configureClassLevels(java.io.InputStream) -> b
    void printMessage(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> b
com.j256.ormlite.logger.LocalLog$1 -> com.j256.ormlite.d.b:
    java.lang.Object initialValue() -> initialValue
com.j256.ormlite.logger.LocalLog$PatternLevel -> com.j256.ormlite.d.c:
    java.util.regex.Pattern pattern -> a
    com.j256.ormlite.logger.Log$Level level -> b
com.j256.ormlite.logger.Log -> com.j256.ormlite.d.d:
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> a
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String) -> a
    void log(com.j256.ormlite.logger.Log$Level,java.lang.String,java.lang.Throwable) -> a
com.j256.ormlite.logger.Log$Level -> com.j256.ormlite.d.e:
    com.j256.ormlite.logger.Log$Level TRACE -> a
    com.j256.ormlite.logger.Log$Level DEBUG -> b
    com.j256.ormlite.logger.Log$Level INFO -> c
    com.j256.ormlite.logger.Log$Level WARNING -> d
    com.j256.ormlite.logger.Log$Level ERROR -> e
    com.j256.ormlite.logger.Log$Level FATAL -> f
    int level -> g
    com.j256.ormlite.logger.Log$Level[] $VALUES -> h
    com.j256.ormlite.logger.Log$Level[] values() -> values
    com.j256.ormlite.logger.Log$Level valueOf(java.lang.String) -> valueOf
    boolean isEnabled(com.j256.ormlite.logger.Log$Level) -> a
com.j256.ormlite.logger.Logger -> com.j256.ormlite.d.f:
    int ARG_STRING_LENGTH -> a
    java.lang.Object UNKNOWN_ARG -> b
    com.j256.ormlite.logger.Log log -> c
    boolean isLevelEnabled(com.j256.ormlite.logger.Log$Level) -> a
    void trace(java.lang.String,java.lang.Object) -> a
    void trace(java.lang.String,java.lang.Object,java.lang.Object) -> a
    void trace(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    void debug(java.lang.String,java.lang.Object) -> b
    void debug(java.lang.String,java.lang.Object,java.lang.Object) -> b
    void debug(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> b
    void debug(java.lang.String,java.lang.Object[]) -> a
    void info(java.lang.String) -> a
    void info(java.lang.String,java.lang.Object) -> c
    void info(java.lang.String,java.lang.Object,java.lang.Object) -> c
    void info(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> c
    void warn(java.lang.Throwable,java.lang.String) -> a
    void error(java.lang.String) -> b
    void error(java.lang.String,java.lang.Object) -> d
    void error(java.lang.String,java.lang.Object,java.lang.Object) -> d
    void error(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> d
    void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    void error$6fc4a987(java.lang.String,java.lang.Object[]) -> b
    void innerLog(com.j256.ormlite.logger.Log$Level,java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object[]) -> a
    void appendArg(java.lang.StringBuilder,java.lang.Object) -> a
com.j256.ormlite.logger.LoggerFactory -> com.j256.ormlite.d.g:
    com.j256.ormlite.logger.LoggerFactory$LogType logType -> a
    com.j256.ormlite.logger.Logger getLogger(java.lang.Class) -> a
com.j256.ormlite.logger.LoggerFactory$LogType -> com.j256.ormlite.d.h:
    com.j256.ormlite.logger.LoggerFactory$LogType ANDROID -> a
    com.j256.ormlite.logger.LoggerFactory$LogType COMMONS_LOGGING -> b
    com.j256.ormlite.logger.LoggerFactory$LogType LOG4J -> c
    com.j256.ormlite.logger.LoggerFactory$LogType LOCAL -> d
    java.lang.String detectClassName -> e
    java.lang.String logClassName -> f
    com.j256.ormlite.logger.LoggerFactory$LogType[] $VALUES -> g
    com.j256.ormlite.logger.LoggerFactory$LogType[] values() -> values
    com.j256.ormlite.logger.LoggerFactory$LogType valueOf(java.lang.String) -> valueOf
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> a
    com.j256.ormlite.logger.Log createLogFromClassName(java.lang.String) -> b
    boolean isAvailable() -> a
    boolean isAvailableTestClass() -> b
com.j256.ormlite.logger.LoggerFactory$LogType$1 -> com.j256.ormlite.d.i:
    com.j256.ormlite.logger.Log createLog(java.lang.String) -> a
    boolean isAvailable() -> a
com.j256.ormlite.misc.BaseDaoEnabled -> com.j256.ormlite.e.a:
    com.j256.ormlite.dao.Dao dao -> a
    void setDao(com.j256.ormlite.dao.Dao) -> a
com.j256.ormlite.misc.JavaxPersistence -> com.j256.ormlite.e.b:
    com.j256.ormlite.field.DatabaseFieldConfig createFieldConfig$439784f8(java.lang.reflect.Field) -> a
    java.lang.String getEntityName(java.lang.Class) -> a
com.j256.ormlite.misc.SqlExceptionUtil -> com.j256.ormlite.e.c:
    java.sql.SQLException create(java.lang.String,java.lang.Throwable) -> a
com.j256.ormlite.misc.VersionUtils -> com.j256.ormlite.e.d:
    com.j256.ormlite.logger.Logger logger -> a
    java.lang.String coreVersionFile -> b
    java.lang.String jdbcVersionFile -> c
    java.lang.String androidVersionFile -> d
    boolean thrownOnErrors -> e
    void checkCoreVersusAndroidVersions() -> a
    java.lang.String getVersionFromFile(java.lang.String) -> a
    void error(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    com.j256.ormlite.logger.Logger getLogger() -> b
com.j256.ormlite.stmt.ArgumentHolder -> com.j256.ormlite.f.a:
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> a
    void setValue(java.lang.Object) -> a
    java.lang.Object getSqlArgValue() -> a
    com.j256.ormlite.field.SqlType getSqlType() -> b
    com.j256.ormlite.field.FieldType getFieldType() -> c
com.j256.ormlite.stmt.BaseArgumentHolder -> com.j256.ormlite.f.b:
    java.lang.String columnName -> a
    com.j256.ormlite.field.FieldType fieldType -> b
    com.j256.ormlite.field.SqlType sqlType -> c
    java.lang.Object getValue() -> d
    boolean isValueSet() -> e
    void setMetaInfo(java.lang.String,com.j256.ormlite.field.FieldType) -> a
    java.lang.Object getSqlArgValue() -> a
    com.j256.ormlite.field.FieldType getFieldType() -> c
    com.j256.ormlite.field.SqlType getSqlType() -> b
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.GenericRowMapper -> com.j256.ormlite.f.c:
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> a
com.j256.ormlite.stmt.PreparedDelete -> com.j256.ormlite.f.d:
com.j256.ormlite.stmt.PreparedQuery -> com.j256.ormlite.f.e:
com.j256.ormlite.stmt.PreparedStmt -> com.j256.ormlite.f.f:
    com.j256.ormlite.support.CompiledStatement compile$b05b91d(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> a
    java.lang.String getStatement() -> a
com.j256.ormlite.stmt.PreparedUpdate -> com.j256.ormlite.f.g:
com.j256.ormlite.stmt.QueryBuilder -> com.j256.ormlite.f.h:
    com.j256.ormlite.field.FieldType idField -> h
    com.j256.ormlite.field.FieldType[] resultFieldTypes -> i
    boolean distinct -> j
    boolean selectIdColumn -> k
    java.util.List selectColumnList -> l
    java.util.List selectRawList -> m
    java.util.List orderByList -> n
    java.lang.String orderByRaw -> o
    java.util.List groupByList -> p
    java.lang.String groupByRaw -> q
    boolean isInnerQuery -> r
    boolean countOf -> s
    java.lang.String having -> t
    java.lang.Long limit -> u
    java.lang.Long offset -> v
    java.lang.String joinType -> w
    com.j256.ormlite.stmt.QueryBuilder joinedQueryBuilder -> x
    com.j256.ormlite.field.FieldType localJoinedField -> y
    com.j256.ormlite.field.FieldType remoteJoinedField -> z
    com.j256.ormlite.stmt.PreparedQuery prepare() -> a
    com.j256.ormlite.stmt.QueryBuilder selectRaw(java.lang.String[]) -> a
    com.j256.ormlite.stmt.QueryBuilder orderBy(java.lang.String,boolean) -> a
    void appendStatementStart$724304b9(java.lang.StringBuilder) -> a
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> b
    void appendWhereStatement(java.lang.StringBuilder,java.util.List,boolean) -> a
    void appendStatementEnd(java.lang.StringBuilder) -> b
    void setAddTableName(boolean) -> a
    void appendJoinSql(java.lang.StringBuilder) -> c
    void appendFieldColumnName(java.lang.StringBuilder,com.j256.ormlite.field.FieldType,java.util.List) -> a
    boolean hasGroupStuff() -> f
    void appendGroupBys(java.lang.StringBuilder,boolean) -> a
    boolean hasOrderStuff() -> g
    void appendOrderBys(java.lang.StringBuilder,boolean) -> b
    void appendColumnName(java.lang.StringBuilder,java.lang.String) -> a
com.j256.ormlite.stmt.SelectArg -> com.j256.ormlite.f.i:
    boolean hasBeenSet -> a
    java.lang.Object value -> b
    java.lang.Object getValue() -> d
    void setValue(java.lang.Object) -> a
    boolean isValueSet() -> e
com.j256.ormlite.stmt.SelectIterator -> com.j256.ormlite.f.j:
    com.j256.ormlite.logger.Logger logger -> a
    java.lang.Class dataClass -> b
    com.j256.ormlite.dao.Dao classDao -> c
    com.j256.ormlite.support.ConnectionSource connectionSource -> d
    com.j256.ormlite.support.DatabaseConnection connection -> e
    com.j256.ormlite.support.CompiledStatement compiledStmt -> f
    com.j256.ormlite.support.DatabaseResults results -> g
    com.j256.ormlite.stmt.GenericRowMapper rowMapper -> h
    java.lang.String statement -> i
    boolean first -> j
    boolean closed -> k
    boolean alreadyMoved -> l
    java.lang.Object last -> m
    int rowC -> n
    boolean hasNextThrow() -> c
    boolean hasNext() -> hasNext
    java.lang.Object nextThrow() -> d
    java.lang.Object next() -> next
    void remove() -> remove
    void close() -> a
    void moveToNext() -> b
com.j256.ormlite.stmt.StatementBuilder -> com.j256.ormlite.f.k:
    com.j256.ormlite.logger.Logger logger -> h
    com.j256.ormlite.table.TableInfo tableInfo -> a
    java.lang.String tableName -> b
    com.j256.ormlite.db.DatabaseType databaseType -> c
    com.j256.ormlite.dao.Dao dao -> d
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> e
    boolean addTableName -> f
    com.j256.ormlite.stmt.Where where -> g
    com.j256.ormlite.stmt.Where where() -> c
    com.j256.ormlite.stmt.mapped.MappedPreparedStmt prepareStatement$680f5df7() -> d
    java.lang.String prepareStatementString() -> e
    java.lang.String buildStatementString(java.util.List) -> a
    void appendStatementStart$724304b9(java.lang.StringBuilder) -> a
    void appendWhereStatement(java.lang.StringBuilder,java.util.List,boolean) -> a
    void appendStatementEnd(java.lang.StringBuilder) -> b
    com.j256.ormlite.field.FieldType[] getResultFieldTypes() -> b
    com.j256.ormlite.field.FieldType verifyColumnName(java.lang.String) -> a
com.j256.ormlite.stmt.StatementBuilder$StatementType -> com.j256.ormlite.f.l:
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT -> a
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_LONG -> b
    com.j256.ormlite.stmt.StatementBuilder$StatementType SELECT_RAW -> c
    com.j256.ormlite.stmt.StatementBuilder$StatementType UPDATE -> d
    com.j256.ormlite.stmt.StatementBuilder$StatementType DELETE -> e
    com.j256.ormlite.stmt.StatementBuilder$StatementType EXECUTE -> f
    boolean okForStatementBuilder -> g
    boolean okForQuery -> h
    boolean okForUpdate -> i
    boolean okForExecute -> j
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] $VALUES -> k
    com.j256.ormlite.stmt.StatementBuilder$StatementType[] values() -> values
    com.j256.ormlite.stmt.StatementBuilder$StatementType valueOf(java.lang.String) -> valueOf
    boolean isOkForStatementBuilder() -> a
    boolean isOkForQuery() -> b
    boolean isOkForExecute() -> c
com.j256.ormlite.stmt.StatementExecutor -> com.j256.ormlite.f.m:
    com.j256.ormlite.logger.Logger logger -> a
    com.j256.ormlite.field.FieldType[] noFieldTypes -> b
    com.j256.ormlite.db.DatabaseType databaseType -> c
    com.j256.ormlite.table.TableInfo tableInfo -> d
    com.j256.ormlite.dao.Dao dao -> e
    com.j256.ormlite.stmt.mapped.MappedQueryForId mappedQueryForId -> f
    com.j256.ormlite.stmt.PreparedQuery preparedQueryForAll -> g
    com.j256.ormlite.stmt.mapped.MappedCreate mappedInsert -> h
    com.j256.ormlite.stmt.mapped.MappedUpdate mappedUpdate -> i
    com.j256.ormlite.stmt.mapped.MappedDelete mappedDelete -> j
    java.lang.String ifExistsQuery -> k
    com.j256.ormlite.field.FieldType[] ifExistsFieldTypes -> l
    java.lang.Object queryForId(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> a
    java.util.List query(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> a
    com.j256.ormlite.stmt.SelectIterator buildIterator$4272fc0e(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.dao.ObjectCache) -> a
    com.j256.ormlite.stmt.SelectIterator buildIterator$28c54154(com.j256.ormlite.dao.BaseDaoImpl,com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.stmt.PreparedStmt,com.j256.ormlite.dao.ObjectCache) -> a
    int create(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> b
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> c
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> d
    boolean ifExists(com.j256.ormlite.support.DatabaseConnection,java.lang.Object) -> a
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> a
com.j256.ormlite.stmt.Where -> com.j256.ormlite.f.n:
    com.j256.ormlite.table.TableInfo tableInfo -> a
    com.j256.ormlite.stmt.StatementBuilder statementBuilder -> b
    com.j256.ormlite.field.FieldType idFieldType -> c
    java.lang.String idColumnName -> d
    com.j256.ormlite.db.DatabaseType databaseType -> e
    com.j256.ormlite.stmt.query.Clause[] clauseStack -> f
    int clauseStackLevel -> g
    com.j256.ormlite.stmt.query.NeedsFutureClause needsFuture -> h
    com.j256.ormlite.stmt.Where eq(java.lang.String,java.lang.Object) -> a
    com.j256.ormlite.stmt.PreparedQuery prepare() -> a
    void appendSql(java.lang.String,java.lang.StringBuilder,java.util.List) -> a
    java.lang.String toString() -> toString
    com.j256.ormlite.stmt.query.Clause peek() -> b
com.j256.ormlite.stmt.mapped.BaseMappedQuery -> com.j256.ormlite.f.a.a:
    com.j256.ormlite.field.FieldType[] resultsFieldTypes -> a
    java.util.Map columnPositions -> h
    java.lang.Object parent -> i
    java.lang.Object parentId -> j
    java.lang.Object mapRow(com.j256.ormlite.support.DatabaseResults) -> a
    void setParentInformation(java.lang.Object,java.lang.Object) -> a
com.j256.ormlite.stmt.mapped.BaseMappedStatement -> com.j256.ormlite.f.a.b:
    com.j256.ormlite.logger.Logger logger -> b
    com.j256.ormlite.table.TableInfo tableInfo -> c
    java.lang.Class clazz -> d
    com.j256.ormlite.field.FieldType idField -> e
    java.lang.String statement -> f
    com.j256.ormlite.field.FieldType[] argFieldTypes -> g
    java.lang.Object[] getFieldObjects(java.lang.Object) -> a
    java.lang.Object convertIdToFieldObject(java.lang.Object) -> b
    void appendWhereFieldEq$5ff23530(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder) -> a
    void appendTableName(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.lang.String,java.lang.String) -> a
    void appendFieldColumnName$31774b92(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,com.j256.ormlite.field.FieldType) -> a
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.mapped.MappedCreate -> com.j256.ormlite.f.a.c:
    java.lang.String queryNextSequenceStmt -> a
    java.lang.String dataClassName -> h
    int versionFieldTypeIndex -> i
    int insert$574da573(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> a
    com.j256.ormlite.stmt.mapped.MappedCreate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> a
    boolean foreignCollectionsAreAssigned(com.j256.ormlite.field.FieldType[],java.lang.Object) -> a
    boolean isFieldCreatable$2a156630(com.j256.ormlite.field.FieldType) -> a
com.j256.ormlite.stmt.mapped.MappedCreate$KeyHolder -> com.j256.ormlite.f.a.d:
    java.lang.Number key -> a
    void addKey(java.lang.Number) -> a
com.j256.ormlite.stmt.mapped.MappedDelete -> com.j256.ormlite.f.a.e:
    com.j256.ormlite.stmt.mapped.MappedDelete build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> a
    int delete(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> a
com.j256.ormlite.stmt.mapped.MappedPreparedStmt -> com.j256.ormlite.f.a.f:
    com.j256.ormlite.stmt.ArgumentHolder[] argHolders -> h
    java.lang.Long limit -> i
    com.j256.ormlite.stmt.StatementBuilder$StatementType type -> j
    com.j256.ormlite.support.CompiledStatement compile$b05b91d(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> a
    java.lang.String getStatement() -> a
    com.j256.ormlite.support.CompiledStatement assignStatementArguments(com.j256.ormlite.support.CompiledStatement) -> a
com.j256.ormlite.stmt.mapped.MappedQueryForId -> com.j256.ormlite.f.a.g:
    java.lang.String label -> h
    java.lang.Object execute(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> a
    com.j256.ormlite.stmt.mapped.MappedQueryForId build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,com.j256.ormlite.field.FieldType) -> a
    void logArgs(java.lang.Object[]) -> a
com.j256.ormlite.stmt.mapped.MappedUpdate -> com.j256.ormlite.f.a.h:
    com.j256.ormlite.field.FieldType versionFieldType -> a
    int versionFieldTypeIndex -> h
    com.j256.ormlite.stmt.mapped.MappedUpdate build(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo) -> a
    int update(com.j256.ormlite.support.DatabaseConnection,java.lang.Object,com.j256.ormlite.dao.ObjectCache) -> a
    boolean isFieldUpdatable(com.j256.ormlite.field.FieldType,com.j256.ormlite.field.FieldType) -> a
com.j256.ormlite.stmt.query.BaseComparison -> com.j256.ormlite.f.b.a:
    java.lang.String columnName -> a
    com.j256.ormlite.field.FieldType fieldType -> b
    java.lang.Object value -> c
    void appendOperation(java.lang.StringBuilder) -> a
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> a
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> a
    void appendArgOrValue(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.field.FieldType,java.lang.StringBuilder,java.util.List,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.j256.ormlite.stmt.query.Clause -> com.j256.ormlite.f.b.b:
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> a
com.j256.ormlite.stmt.query.Comparison -> com.j256.ormlite.f.b.c:
com.j256.ormlite.stmt.query.NeedsFutureClause -> com.j256.ormlite.f.b.d:
com.j256.ormlite.stmt.query.OrderBy -> com.j256.ormlite.f.b.e:
    java.lang.String columnName -> a
    boolean ascending -> b
    java.lang.String getColumnName() -> a
    boolean isAscending() -> b
com.j256.ormlite.stmt.query.SimpleComparison -> com.j256.ormlite.f.b.f:
    java.lang.String operation -> c
    void appendOperation(java.lang.StringBuilder) -> a
    java.lang.String toString() -> toString
    void appendValue(com.j256.ormlite.db.DatabaseType,java.lang.StringBuilder,java.util.List) -> a
    void appendSql(com.j256.ormlite.db.DatabaseType,java.lang.String,java.lang.StringBuilder,java.util.List) -> a
com.j256.ormlite.support.BaseConnectionSource -> com.j256.ormlite.g.a:
    java.lang.ThreadLocal specialConnection -> a
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> e
    com.j256.ormlite.support.DatabaseConnection getSavedConnection() -> f
    boolean saveSpecial(com.j256.ormlite.support.DatabaseConnection) -> c
    boolean clearSpecial(com.j256.ormlite.support.DatabaseConnection,com.j256.ormlite.logger.Logger) -> a
com.j256.ormlite.support.BaseConnectionSource$NestedConnection -> com.j256.ormlite.g.b:
    com.j256.ormlite.support.DatabaseConnection connection -> a
    int nestedC -> b
    void increment() -> a
    int decrementAndGet() -> b
com.j256.ormlite.support.CompiledStatement -> com.j256.ormlite.g.c:
    com.j256.ormlite.support.DatabaseResults runQuery(com.j256.ormlite.dao.ObjectCache) -> a
    int runExecute() -> a
    void close() -> b
    void setObject(int,java.lang.Object,com.j256.ormlite.field.SqlType) -> a
    void setMaxRows(int) -> a
com.j256.ormlite.support.ConnectionSource -> com.j256.ormlite.g.d:
    com.j256.ormlite.support.DatabaseConnection getReadOnlyConnection() -> a
    com.j256.ormlite.support.DatabaseConnection getReadWriteConnection() -> b
    boolean saveSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> a
    void clearSpecialConnection(com.j256.ormlite.support.DatabaseConnection) -> b
    com.j256.ormlite.support.DatabaseConnection getSpecialConnection() -> e
    com.j256.ormlite.db.DatabaseType getDatabaseType() -> d
com.j256.ormlite.support.DatabaseConnection -> com.j256.ormlite.g.e:
    java.lang.Object MORE_THAN_ONE -> a
    com.j256.ormlite.support.CompiledStatement compileStatement$7505a227(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> a
    com.j256.ormlite.support.CompiledStatement compileStatement$74b6de7e$7505a227(java.lang.String,com.j256.ormlite.stmt.StatementBuilder$StatementType) -> b
    int insert(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[],com.j256.ormlite.support.GeneratedKeyHolder) -> a
    int update(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> a
    int delete(java.lang.String,java.lang.Object[],com.j256.ormlite.field.FieldType[]) -> b
    java.lang.Object queryForOne$24323db(java.lang.String,java.lang.Object[],com.j256.ormlite.stmt.GenericRowMapper,com.j256.ormlite.dao.ObjectCache) -> a
    long queryForLong$4e6235d6(java.lang.String,java.lang.Object[]) -> a
com.j256.ormlite.support.DatabaseResults -> com.j256.ormlite.g.f:
    int getColumnCount() -> a
    boolean first() -> b
    boolean next() -> c
    int findColumn(java.lang.String) -> a
    java.lang.String getString(int) -> a
    boolean getBoolean(int) -> b
    char getChar(int) -> c
    byte getByte(int) -> d
    byte[] getBytes(int) -> e
    short getShort(int) -> f
    int getInt(int) -> g
    long getLong(int) -> h
    float getFloat(int) -> i
    double getDouble(int) -> j
    java.sql.Timestamp getTimestamp$49d1f431() -> d
    java.math.BigDecimal getBigDecimal$76f1efd4() -> e
    boolean wasNull(int) -> k
    com.j256.ormlite.dao.ObjectCache getObjectCache() -> f
com.j256.ormlite.support.GeneratedKeyHolder -> com.j256.ormlite.g.g:
    void addKey(java.lang.Number) -> a
com.j256.ormlite.table.DatabaseTable -> com.j256.ormlite.h.a:
    java.lang.String tableName() -> a
    java.lang.Class daoClass() -> b
com.j256.ormlite.table.DatabaseTableConfig -> com.j256.ormlite.h.b:
    java.lang.Class dataClass -> a
    java.lang.String tableName -> b
    java.util.List fieldConfigs -> c
    com.j256.ormlite.field.FieldType[] fieldTypes -> d
    java.lang.reflect.Constructor constructor -> e
    java.lang.Class getDataClass() -> a
    java.lang.String getTableName() -> b
    void extractFieldTypes(com.j256.ormlite.support.ConnectionSource) -> a
    com.j256.ormlite.field.FieldType[] getFieldTypes$18f56eef() -> c
    java.lang.reflect.Constructor getConstructor() -> d
    com.j256.ormlite.table.DatabaseTableConfig fromClass(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    java.lang.String extractTableName(java.lang.Class) -> a
    java.lang.reflect.Constructor findNoArgConstructor(java.lang.Class) -> b
    com.j256.ormlite.field.FieldType[] extractFieldTypes(com.j256.ormlite.support.ConnectionSource,java.lang.Class,java.lang.String) -> a
    com.j256.ormlite.field.FieldType[] convertFieldConfigs(com.j256.ormlite.support.ConnectionSource,java.lang.String,java.util.List) -> a
com.j256.ormlite.table.ObjectFactory -> com.j256.ormlite.h.c:
    java.lang.Object createObject$429fe1cd() -> a
com.j256.ormlite.table.TableInfo -> com.j256.ormlite.h.d:
    com.j256.ormlite.field.FieldType[] NO_FOREIGN_COLLECTIONS -> a
    com.j256.ormlite.dao.BaseDaoImpl baseDaoImpl -> b
    java.lang.Class dataClass -> c
    java.lang.String tableName -> d
    com.j256.ormlite.field.FieldType[] fieldTypes -> e
    com.j256.ormlite.field.FieldType[] foreignCollections -> f
    com.j256.ormlite.field.FieldType idField -> g
    java.lang.reflect.Constructor constructor -> h
    boolean foreignAutoCreate -> i
    java.util.Map fieldNameMap -> j
    java.lang.Class getDataClass() -> a
    java.lang.String getTableName() -> b
    com.j256.ormlite.field.FieldType[] getFieldTypes() -> c
    com.j256.ormlite.field.FieldType getFieldTypeByColumnName(java.lang.String) -> a
    com.j256.ormlite.field.FieldType getIdField() -> d
    java.lang.Object createObject() -> e
    boolean isForeignAutoCreate() -> f
    com.j256.ormlite.field.FieldType[] getForeignCollections() -> g
com.j256.ormlite.table.TableUtils -> com.j256.ormlite.h.e:
    com.j256.ormlite.logger.Logger logger -> a
    com.j256.ormlite.field.FieldType[] noFieldTypes -> b
    int createTable(com.j256.ormlite.support.ConnectionSource,java.lang.Class) -> a
    void addCreateTableStatements$7cff6efe$217d5dd3(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List) -> a
    void addCreateIndexStatements$e2f0f61(com.j256.ormlite.db.DatabaseType,com.j256.ormlite.table.TableInfo,java.util.List,boolean) -> a
    int doCreateTable$62930ce0(com.j256.ormlite.support.ConnectionSource,com.j256.ormlite.table.TableInfo) -> a
    int doStatements$66920578$5e25c3ee(com.j256.ormlite.support.DatabaseConnection,java.lang.String,java.util.Collection,boolean) -> a
    int doCreateTestQueries$11e61780(com.j256.ormlite.support.DatabaseConnection,java.util.List) -> a
com.mapplas.app.Resizer -> com.mapplas.app.a:
    int height -> a
    float velocity -> b
    long lastMilis -> c
    boolean bigger -> d
    float totalHeight -> e
    android.view.View objective -> f
    void start(int,float) -> a
    void run() -> run
com.mapplas.app.SliderListView -> com.mapplas.app.SliderListView:
    com.mapplas.app.Resizer resizer -> a
    boolean open -> b
com.mapplas.app.activities.AppDetail -> com.mapplas.app.activities.AppDetail:
    com.mapplas.model.App app -> a
    com.mapplas.model.User user -> b
    com.mapplas.model.SuperModel model -> c
    android.view.animation.RotateAnimation flipAnimation -> d
    android.view.animation.RotateAnimation reverseFlipAnimation -> e
    android.util.DisplayMetrics metrics -> f
    boolean somethingChanged -> g
    com.mapplas.app.adapters.detail.DetailMoreAppsArrayAdapter moreAppsAdapter -> h
    android.widget.ListView moreAppsList -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void detailRequestFinishedOk() -> a
    void detailRequestFinishedNok() -> b
    com.mapplas.model.App access$0(com.mapplas.app.activities.AppDetail) -> a
    com.mapplas.model.SuperModel access$1(com.mapplas.app.activities.AppDetail) -> b
    com.mapplas.model.User access$2(com.mapplas.app.activities.AppDetail) -> c
    void access$3$6b5345a1(com.mapplas.app.activities.AppDetail) -> d
com.mapplas.app.activities.AppDetail$1 -> com.mapplas.app.activities.a:
    com.mapplas.app.activities.AppDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.AppDetail$2 -> com.mapplas.app.activities.b:
    com.mapplas.app.activities.AppDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.AppDetail$3 -> com.mapplas.app.activities.c:
    com.mapplas.app.activities.AppDetail this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.mapplas.app.activities.AppDetail$4 -> com.mapplas.app.activities.d:
    boolean close -> b
    com.mapplas.app.activities.AppDetail this$0 -> a
    android.widget.ImageView val$moreLessImage -> c
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.AppDetail$5 -> com.mapplas.app.activities.e:
    com.mapplas.app.activities.AppDetail this$0 -> a
    android.widget.ImageView val$ivPinup -> b
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.AppDetail$6 -> com.mapplas.app.activities.f:
    com.mapplas.app.activities.AppDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.AppDetail$7 -> com.mapplas.app.activities.g:
    com.mapplas.app.activities.AppDetail this$0 -> a
    void onClick(android.view.View) -> onClick
    com.mapplas.app.activities.AppDetail access$0(com.mapplas.app.activities.AppDetail$7) -> a
com.mapplas.app.activities.AppDetail$7$1 -> com.mapplas.app.activities.h:
    com.mapplas.app.activities.AppDetail$7 this$1 -> a
    com.mapplas.model.App val$anonLoc -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.mapplas.app.activities.AppDetail$7$2 -> com.mapplas.app.activities.i:
    com.mapplas.app.activities.AppDetail$7 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mapplas.app.activities.AppDetail$8 -> com.mapplas.app.activities.j:
    com.mapplas.app.activities.AppDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.AppDetail$9 -> com.mapplas.app.activities.k:
    com.mapplas.app.activities.AppDetail this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.HtmlTextActivity -> com.mapplas.app.activities.HtmlTextActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.mapplas.app.activities.HtmlTextActivity$1 -> com.mapplas.app.activities.l:
    com.mapplas.app.activities.HtmlTextActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.LanguageActivity -> com.mapplas.app.activities.LanguageActivity:
    void onRestart() -> onRestart
    void onStart() -> onStart
com.mapplas.app.activities.MapplasActivity -> com.mapplas.app.activities.MapplasActivity:
    java.lang.String PACKAGE_NAME -> a
    com.mapplas.model.SuperModel model -> c
    android.location.LocationManager locationManager -> d
    java.util.ArrayList appsInstalledList -> b
    com.mapplas.utils.third_party.RefreshableListView listView -> e
    com.mapplas.app.adapters.app.AppAdapter listViewAdapter -> f
    android.widget.TextView listViewHeaderStatusMessage -> g
    android.widget.ImageView listViewHeaderImage -> h
    com.mapplas.utils.location.AroundRequester aroundRequester -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void setRotateAnimConstants(android.view.animation.RotateAnimation) -> a
    com.mapplas.model.SuperModel access$0(com.mapplas.app.activities.MapplasActivity) -> a
    void access$1(com.mapplas.app.activities.MapplasActivity) -> b
com.mapplas.app.activities.MapplasActivity$1 -> com.mapplas.app.activities.m:
    com.mapplas.app.activities.MapplasActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.MapplasActivity$2 -> com.mapplas.app.activities.n:
    com.mapplas.app.activities.MapplasActivity this$0 -> a
    void onRefresh$674d34c6() -> a
com.mapplas.app.activities.MoreFromDeveloperActivity -> com.mapplas.app.activities.MoreFromDeveloperActivity:
    com.mapplas.model.App app -> a
    java.lang.String country_code -> b
    com.mapplas.app.adapters.more_apps.MoreFromDeveloperArrayAdapter adapter -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onRestart() -> onRestart
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void requestFinishedNok() -> a
    void requestFinishedOk() -> b
com.mapplas.app.activities.MoreFromDeveloperActivity$1 -> com.mapplas.app.activities.o:
    com.mapplas.app.activities.MoreFromDeveloperActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.SettingsActivity -> com.mapplas.app.activities.SettingsActivity:
    com.mapplas.app.adapters.settings.SettingsAdapter adapter -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onDialogEnglishLanguageClick() -> a
    void onDialogSpanishLanguageClick() -> b
    void onDialogBasqueLanguageClick() -> c
    void updateLanguage(java.lang.String) -> a
    void showAppRestartDialog() -> d
com.mapplas.app.activities.SettingsActivity$1 -> com.mapplas.app.activities.p:
    com.mapplas.app.activities.SettingsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.SettingsActivity$2 -> com.mapplas.app.activities.q:
    com.mapplas.app.activities.SettingsActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mapplas.app.activities.SettingsActivity$3 -> com.mapplas.app.activities.r:
    com.mapplas.app.activities.SettingsActivity this$0 -> a
    boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
com.mapplas.app.activities.UserForm -> com.mapplas.app.activities.UserForm:
    android.view.animation.RotateAnimation flipAnimation -> d
    android.view.animation.RotateAnimation reverseFlipAnimation -> e
    java.lang.String currentResponse -> a
    android.widget.ListView listView -> f
    com.mapplas.model.User user -> g
    java.lang.String currentLocation -> h
    com.mapplas.model.AppOrderedList appOrderedList -> b
    android.widget.LinearLayout refreshListBackgroundFooter -> i
    android.widget.LinearLayout buttonsFooter -> j
    int userId -> k
    boolean somethingChanged -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void getUserFromDB() -> a
    com.mapplas.model.User access$0(com.mapplas.app.activities.UserForm) -> a
com.mapplas.app.activities.UserForm$1 -> com.mapplas.app.activities.s:
    com.mapplas.app.activities.UserForm this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.UserForm$2 -> com.mapplas.app.activities.t:
    com.mapplas.app.activities.UserForm this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.app.activities.WebViewActivity -> com.mapplas.app.activities.WebViewActivity:
    java.lang.String url -> a
    android.widget.RelativeLayout navBar -> b
    com.mapplas.utils.webView.TouchableScrollView scroll -> c
    android.webkit.WebView webView -> d
    android.app.ProgressDialog progressDialog -> e
    void onCreate(android.os.Bundle) -> onCreate
    com.mapplas.utils.webView.TouchableScrollView access$0(com.mapplas.app.activities.WebViewActivity) -> a
com.mapplas.app.activities.WebViewActivity$1 -> com.mapplas.app.activities.u:
    com.mapplas.app.activities.WebViewActivity this$0 -> a
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.mapplas.app.activities.WebViewActivity$2 -> com.mapplas.app.activities.v:
    com.mapplas.app.activities.WebViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.app.adapters.ImageAdapter -> com.mapplas.app.a.a:
    android.content.Context context -> c
    com.mapplas.utils.image.DrawableBackgroundDownloader mdbd -> d
    java.util.ArrayList mImages -> a
    android.widget.Gallery mParentGallery -> e
    android.util.DisplayMetrics metrics -> b
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
com.mapplas.app.adapters.app.AppAdapter -> com.mapplas.app.a.a.a:
    android.content.Context context -> b
    com.mapplas.model.SuperModel model -> c
    com.mapplas.utils.third_party.RefreshableListView list -> d
    java.util.ArrayList applicationList -> e
    com.mapplas.app.activities.MapplasActivity mainActivity -> f
    boolean SLEEP -> a
    android.view.View getPendingView(android.view.ViewGroup) -> a
    void appendCachedData() -> c
    boolean cacheInBackground() -> b
com.mapplas.app.adapters.app.AppArrayAdapter -> com.mapplas.app.a.a.b:
    android.content.Context context -> a
    java.util.ArrayList items -> d
    android.view.animation.Animation animFlipInNext -> e
    android.view.animation.Animation animFlipOutNext -> f
    android.view.animation.Animation animFlipInPrevious -> g
    android.view.animation.Animation animFlipOutPrevious -> h
    com.mapplas.utils.third_party.RefreshableListView list -> i
    com.mapplas.model.SuperModel model -> b
    com.mapplas.model.User user -> c
    com.mapplas.model.App mBlockApp -> j
    android.view.animation.Animation fadeOutAnimation -> k
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void initializeCellHolder(com.mapplas.model.App,com.mapplas.utils.view_holder.AppViewHolder) -> a
    void initializeActionLayouts(com.mapplas.model.App,com.mapplas.utils.view_holder.AppViewHolder,android.view.View) -> a
    void initializeRowUnpressed(com.mapplas.model.App,android.widget.LinearLayout,int) -> a
    void initializeStartButton(com.mapplas.model.App,android.widget.Button) -> a
    void initializeLogoBackgroundPinImage(com.mapplas.model.App,android.widget.ImageView) -> a
    void initializeLogo(com.mapplas.model.App,android.widget.ImageView,android.widget.ViewFlipper) -> a
    com.mapplas.model.App access$0() -> a
    android.view.animation.Animation access$1(com.mapplas.app.adapters.app.AppArrayAdapter) -> a
    android.view.animation.Animation access$2(com.mapplas.app.adapters.app.AppArrayAdapter) -> b
    android.view.animation.Animation access$3(com.mapplas.app.adapters.app.AppArrayAdapter) -> c
    android.view.animation.Animation access$4(com.mapplas.app.adapters.app.AppArrayAdapter) -> d
    com.mapplas.utils.third_party.RefreshableListView access$5(com.mapplas.app.adapters.app.AppArrayAdapter) -> e
    void access$6(com.mapplas.model.App) -> a
    android.view.animation.Animation access$7(com.mapplas.app.adapters.app.AppArrayAdapter) -> f
com.mapplas.app.adapters.app.AppArrayAdapter$1 -> com.mapplas.app.a.a.c:
    com.mapplas.app.adapters.app.AppArrayAdapter this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mapplas.app.adapters.app.AppArrayAdapter$2 -> com.mapplas.app.a.a.d:
    com.mapplas.app.adapters.app.AppArrayAdapter this$0 -> a
    com.mapplas.model.App val$app -> b
    void onClick(android.view.View) -> onClick
com.mapplas.app.adapters.app.AppArrayAdapter$3 -> com.mapplas.app.a.a.e:
    com.mapplas.app.adapters.app.AppArrayAdapter this$0 -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mapplas.app.adapters.app.AppArrayAdapter$4 -> com.mapplas.app.a.a.f:
    com.mapplas.app.adapters.app.AppArrayAdapter this$0 -> a
    com.mapplas.model.App val$app -> b
    com.mapplas.utils.view_holder.AppViewHolder val$cellHolder -> c
    void onClick(android.view.View) -> onClick
com.mapplas.app.adapters.app.AppArrayAdapter$5 -> com.mapplas.app.a.a.g:
    com.mapplas.app.adapters.app.AppArrayAdapter this$0 -> a
    com.mapplas.model.App val$app -> b
    android.view.View val$convertView -> c
    void onClick(android.view.View) -> onClick
    com.mapplas.app.adapters.app.AppArrayAdapter access$0(com.mapplas.app.adapters.app.AppArrayAdapter$5) -> a
com.mapplas.app.adapters.app.AppArrayAdapter$5$1 -> com.mapplas.app.a.a.h:
    com.mapplas.app.adapters.app.AppArrayAdapter$5 this$1 -> a
    android.view.View val$convertView -> b
    com.mapplas.model.App val$app -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.mapplas.app.adapters.app.AppArrayAdapter$5$2 -> com.mapplas.app.a.a.i:
    com.mapplas.app.adapters.app.AppArrayAdapter$5 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mapplas.app.adapters.app.AppArrayAdapter$6 -> com.mapplas.app.a.a.j:
    com.mapplas.app.adapters.app.AppArrayAdapter this$0 -> a
    com.mapplas.model.App val$app -> b
    void onClick(android.view.View) -> onClick
com.mapplas.app.adapters.app.AppArrayAdapter$7 -> com.mapplas.app.a.a.k:
    com.mapplas.app.adapters.app.AppArrayAdapter this$0 -> a
    com.mapplas.model.App val$app -> b
    void onClick(android.view.View) -> onClick
com.mapplas.app.adapters.detail.DetailMoreAppsArrayAdapter -> com.mapplas.app.a.b.a:
    java.util.ArrayList items -> a
    android.content.Context context -> b
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mapplas.app.adapters.more_apps.MoreFromDeveloperArrayAdapter -> com.mapplas.app.a.c.a:
    java.util.ArrayList items -> a
    android.content.Context context -> b
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mapplas.app.adapters.settings.SettingsAdapter -> com.mapplas.app.a.d.a:
    android.content.Context context -> a
    android.view.LayoutInflater inflater -> b
    android.graphics.Typeface normalTypeface -> c
    com.mapplas.utils.visual.dialogs.LanguageDialogInterface languageInterface -> d
    int getCount() -> getCount
    int getViewTypeCount() -> getViewTypeCount
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
    android.content.Context access$1(com.mapplas.app.adapters.settings.SettingsAdapter) -> a
    com.mapplas.utils.visual.dialogs.LanguageDialogInterface access$2(com.mapplas.app.adapters.settings.SettingsAdapter) -> b
com.mapplas.app.adapters.settings.SettingsAdapter$1 -> com.mapplas.app.a.d.b:
    com.mapplas.app.adapters.settings.SettingsAdapter this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
com.mapplas.app.adapters.user.UserAppAdapter -> com.mapplas.app.a.e.a:
    int mType -> c
    java.util.ArrayList items -> d
    android.content.Context context -> e
    com.mapplas.model.User user -> f
    boolean showEmptyMessage -> g
    com.mapplas.model.AppOrderedList appOrderedList -> h
    java.util.concurrent.Semaphore mSemaphore -> i
    com.mapplas.model.App mBlockLoc -> j
    android.view.animation.Animation fadeOutAnimation -> a
    android.os.Handler mHandler -> b
    int getCount() -> getCount
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.concurrent.Semaphore access$0() -> a
    com.mapplas.model.App access$1() -> b
    java.util.ArrayList access$2(com.mapplas.app.adapters.user.UserAppAdapter) -> a
    com.mapplas.model.User access$3(com.mapplas.app.adapters.user.UserAppAdapter) -> b
    int access$4(com.mapplas.app.adapters.user.UserAppAdapter) -> c
    com.mapplas.model.AppOrderedList access$5(com.mapplas.app.adapters.user.UserAppAdapter) -> d
com.mapplas.app.adapters.user.UserAppAdapter$1 -> com.mapplas.app.a.e.b:
    void handleMessage(android.os.Message) -> handleMessage
com.mapplas.app.adapters.user.UserAppAdapter$2 -> com.mapplas.app.a.e.c:
    com.mapplas.app.adapters.user.UserAppAdapter this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mapplas.app.adapters.user.UserAppAdapter$3 -> com.mapplas.app.a.e.d:
    com.mapplas.app.adapters.user.UserAppAdapter this$0 -> a
    android.view.View val$innerView -> b
    void onClick(android.view.View) -> onClick
    com.mapplas.app.adapters.user.UserAppAdapter access$0(com.mapplas.app.adapters.user.UserAppAdapter$3) -> a
com.mapplas.app.adapters.user.UserAppAdapter$3$1 -> com.mapplas.app.a.e.e:
    com.mapplas.app.adapters.user.UserAppAdapter$3 this$1 -> a
    com.mapplas.model.App val$anonLoc -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mapplas.app.application.MapplasApplication -> com.mapplas.app.application.MapplasApplication:
    android.graphics.Typeface typeface -> a
    android.graphics.Typeface typefaceBold -> b
    android.graphics.Typeface typefaceItalic -> c
    void loadTypefaces() -> a
    android.graphics.Typeface getTypeFace() -> b
    android.graphics.Typeface getItalicTypeFace() -> c
    java.lang.String getLanguage() -> d
    void setLanguage(java.lang.String) -> a
com.mapplas.model.App -> com.mapplas.model.App:
    java.lang.String id -> a
    java.lang.String name -> b
    java.lang.String shortDescription -> c
    java.lang.String description -> d
    java.lang.String logo -> e
    java.lang.String price -> f
    float rating -> g
    int auxPin -> h
    java.lang.String address -> i
    java.util.ArrayList auxPhotos -> j
    android.content.pm.ApplicationInfo internalApplicationInfo -> k
    java.lang.String appDeveloperEmail -> l
    java.lang.String appDeveloperWeb -> m
    java.util.ArrayList moreFromDev -> n
    int moreFromDeveloperCount -> o
    java.lang.String developerName -> p
    java.lang.String type -> q
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getId() -> a
    void setId(java.lang.String) -> a
    java.lang.String getName() -> b
    java.lang.String getAppShortDescription() -> c
    java.lang.String getAppDescription() -> d
    java.lang.String getAppLogo() -> e
    void setAppLogo(java.lang.String) -> b
    java.lang.String getAppPrice() -> f
    java.util.ArrayList getAuxPhotos() -> g
    void setAuxPhotos(java.util.ArrayList) -> a
    int isAuxPin() -> h
    void setAuxPin(int) -> a
    android.content.pm.ApplicationInfo getInternalApplicationInfo() -> i
    void setInternalApplicationInfo(android.content.pm.ApplicationInfo) -> a
    java.lang.String getAppType() -> j
    void setAppType(java.lang.String) -> c
    java.lang.String getAddress() -> k
    java.lang.String appDeveloperWeb() -> l
    float rating() -> m
    java.util.ArrayList moreFromDev() -> n
    int moreFromDeveloperCount() -> o
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.mapplas.model.App$1 -> com.mapplas.model.a:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.mapplas.model.AppOrderedList -> com.mapplas.model.AppOrderedList:
    int autoincrementId -> a
    java.util.ArrayList appList -> b
    java.lang.String currentLocation -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.ArrayList getAppList() -> a
    void add(com.mapplas.model.App) -> a
    void reset() -> b
    int size() -> c
    com.mapplas.model.App get(int) -> a
    void setCurrentLocation(java.lang.String) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void sort() -> d
    void update(java.util.ArrayList) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.mapplas.model.AppOrderedList$1 -> com.mapplas.model.b:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.mapplas.model.Comment -> com.mapplas.model.Comment:
    int id -> a
    int idUser -> b
    int idLocalization -> c
    float rate -> d
    java.lang.String date -> e
    java.lang.String hour -> f
    java.lang.String comment -> g
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.mapplas.model.Comment$1 -> com.mapplas.model.c:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.mapplas.model.Constants -> com.mapplas.model.d:
    java.lang.String APP_DEV_URL_INTENT_DATA -> a
    java.lang.String APP_DEV_APP_NAMEL_INTENT_DATA -> b
    java.lang.String MORE_FROM_DEVELOPER_APP_ARRAY -> c
    java.lang.String MORE_FROM_DEVELOPER_APP -> d
    java.lang.String MORE_FROM_DEVELOPER_COUNTRY_CODE -> e
    int NUMBER_OF_RELATED_APPS_TO_SHOW -> f
    java.lang.String LOW_PIXEL_DENSITY -> g
    java.lang.String MEDIUM_PIXEL_DENSITY -> h
    java.lang.String HIGH_PIXEL_DENSITY -> i
    java.lang.String EXTRA_HIGH_PIXEL_DENSITY -> j
    java.lang.String SERVER_RESPONSE_ERROR_USER_IDENTIFICATION -> k
    java.lang.String SETTINGS_LANGUAGE_CHANGE_BUNDLE -> l
    java.lang.String MAPPLAS_SHARED_PREFS -> m
    java.lang.String MAPPLAS_SHARED_PREFS_LANGUAGE_DIALOG_SHOWN -> n
com.mapplas.model.MoreFromDeveloperApp -> com.mapplas.model.MoreFromDeveloperApp:
    java.lang.String id -> a
    java.lang.String name -> b
    java.lang.String logo -> c
    java.lang.String shortDescription -> d
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String id() -> a
    java.lang.String name() -> b
    java.lang.String logo() -> c
    void setLogo(java.lang.String) -> a
    java.lang.String shortDescription() -> d
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.mapplas.model.MoreFromDeveloperApp$1 -> com.mapplas.model.e:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.mapplas.model.SuperModel -> com.mapplas.model.SuperModel:
    java.lang.String currentLocation -> a
    android.location.Location location -> b
    com.mapplas.model.User currentUser -> c
    java.lang.String currentRadius -> d
    java.lang.String currentIMEI -> e
    java.lang.String currentDescriptiveGeoLoc -> f
    java.lang.String countryCode -> g
    com.mapplas.model.AppOrderedList appList -> h
    boolean operationError -> i
    java.lang.String errorText -> j
    java.util.ArrayList notificationRawList -> k
    boolean moreData -> l
    boolean fromBasqueCountry -> m
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String currentDescriptiveGeoLoc() -> a
    void setCurrentDescriptiveGeoLoc(java.lang.String) -> a
    com.mapplas.model.AppOrderedList appList() -> b
    java.lang.String currentLocation() -> c
    void setCurrentLocation(java.lang.String) -> b
    com.mapplas.model.User currentUser() -> d
    void setCurrentUser(com.mapplas.model.User) -> a
    java.lang.String currentIMEI() -> e
    void setCurrentIMEI(java.lang.String) -> c
    void setLocation(android.location.Location) -> a
    android.location.Location getLocation() -> f
    boolean moreData() -> g
    void setMoreData(boolean) -> a
    java.lang.String countryCode() -> h
    void setCountryCode(java.lang.String) -> d
    boolean isFromBasqueCountry() -> i
    void setFromBasqueCountry(boolean) -> b
    void initializeForNewAppRequest() -> j
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void updateAppList(com.mapplas.model.AppOrderedList) -> a
com.mapplas.model.SuperModel$1 -> com.mapplas.model.f:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.mapplas.model.Unit -> com.mapplas.model.g:
com.mapplas.model.User -> com.mapplas.model.User:
    int id -> a
    java.lang.String tel -> b
    java.lang.String imei -> c
    java.util.ArrayList pinnedApps -> d
    java.util.ArrayList blockedApps -> e
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getId() -> a
    void setId$13462e() -> b
    java.util.ArrayList pinnedApps() -> c
    void setPinnedApps(java.util.ArrayList) -> a
    java.util.ArrayList blockedApps() -> d
    void setBlockedApps(java.util.ArrayList) -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.mapplas.model.User$1 -> com.mapplas.model.h:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.mapplas.model.UserFormLayoutComponents -> com.mapplas.model.i:
    com.mapplas.utils.visual.custom_views.RobotoButton blocksButton -> a
    com.mapplas.utils.visual.custom_views.RobotoButton pinUpsButton -> b
    android.widget.LinearLayout footerListRefreshLayout -> c
    android.widget.LinearLayout footerButtonsLayout -> d
    android.widget.ImageView refreshIcon -> e
    com.mapplas.utils.visual.custom_views.RobotoButton blocksButton() -> a
    com.mapplas.utils.visual.custom_views.RobotoButton pinUpsButton() -> b
    android.widget.LinearLayout footerButtonsLayout() -> c
com.mapplas.model.database.DatabaseManager -> com.mapplas.model.a.a:
    com.mapplas.model.database.UserDatabase userDatabase -> a
    com.mapplas.model.database.UserDatabase user(android.content.Context) -> a
com.mapplas.model.database.UserDatabase -> com.mapplas.model.a.b:
    java.lang.String DATABASE_NAME -> c
    int DATABASE_VERSION -> d
    com.j256.ormlite.dao.Dao userDao -> e
    void onCreate$39896c6b(com.j256.ormlite.support.ConnectionSource) -> a
    com.j256.ormlite.dao.Dao getUserDao() -> a
    void close() -> close
com.mapplas.model.database.repositories.RepositoryManager -> com.mapplas.model.a.a.a:
    com.mapplas.model.database.repositories.UserRepository users -> a
    com.mapplas.model.database.repositories.UserRepository users(android.content.Context) -> a
com.mapplas.model.database.repositories.UserRepository -> com.mapplas.model.a.a.b:
com.mapplas.model.database.repositories.base.Repository -> com.mapplas.model.a.a.a.a:
    com.j256.ormlite.dao.Dao dao -> a
    java.lang.String tableName -> b
    java.util.ArrayList createOrUpdateQueue -> c
    int createOrUpdateQueueMaxSize -> d
    com.j256.ormlite.dao.Dao$CreateOrUpdateStatus createOrUpdate(com.mapplas.model.Unit) -> a
    com.mapplas.model.Unit findFromId(int) -> a
com.mapplas.model.database.repositories.base.SqlRepository -> com.mapplas.model.a.a.a.b:
com.mapplas.utils.cache.BitmapFromStream -> com.mapplas.utils.a.a:
com.mapplas.utils.cache.BitmapLoader -> com.mapplas.utils.a.b:
    com.mapplas.utils.cache.BitmapFromStream bitmapFromStream -> a
    android.graphics.Bitmap load(com.mapplas.utils.cache.CacheFolder,java.lang.String) -> a
com.mapplas.utils.cache.BitmapSaver -> com.mapplas.utils.a.c:
    com.mapplas.utils.cache.FileManagement fileManagement -> a
    boolean save(android.graphics.Bitmap,com.mapplas.utils.cache.CacheFolder,java.lang.String) -> a
com.mapplas.utils.cache.CacheFolder -> com.mapplas.utils.a.d:
    java.lang.String cacheDir -> a
    java.io.File getFileWithPath(java.lang.String) -> a
com.mapplas.utils.cache.CacheFolderFactory -> com.mapplas.utils.a.e:
    java.lang.String cachePath -> a
    com.mapplas.utils.cache.CacheFolder create() -> a
com.mapplas.utils.cache.FileManagement -> com.mapplas.utils.a.f:
    boolean createFile(java.io.File) -> a
com.mapplas.utils.cache.ImageFileManager -> com.mapplas.utils.a.g:
    com.mapplas.utils.cache.BitmapLoader bitmapLoader -> a
    com.mapplas.utils.cache.BitmapSaver bitmapSaver -> b
    boolean save(android.graphics.Bitmap,com.mapplas.utils.cache.CacheFolder,java.lang.String) -> a
    android.graphics.Bitmap load(com.mapplas.utils.cache.CacheFolder,java.lang.String) -> a
    boolean exists(com.mapplas.utils.cache.CacheFolder,java.lang.String) -> b
com.mapplas.utils.image.DrawableBackgroundDownloader -> com.mapplas.utils.b.a:
    java.util.Map mCache -> c
    java.util.LinkedList mChacheController -> d
    java.util.concurrent.ExecutorService mThreadPool -> e
    java.util.Map mImageViews -> f
    int MAX_CACHE_SIZE -> a
    int THREAD_POOL_SIZE -> b
    void loadDrawable$5233d0f4(java.lang.String,android.widget.ImageView,android.graphics.drawable.Drawable,int) -> a
    void putDrawableInCache(java.lang.String,android.graphics.drawable.Drawable) -> a
    android.graphics.drawable.Drawable downloadDrawable(java.lang.String) -> a
    java.util.Map access$0(com.mapplas.utils.image.DrawableBackgroundDownloader) -> a
    android.graphics.drawable.Drawable access$1(com.mapplas.utils.image.DrawableBackgroundDownloader,java.lang.String) -> a
com.mapplas.utils.image.DrawableBackgroundDownloader$1 -> com.mapplas.utils.b.b:
    com.mapplas.utils.image.DrawableBackgroundDownloader this$0 -> a
    android.widget.ImageView val$imageView -> b
    java.lang.String val$url -> c
    boolean val$keepRatio -> d
    int val$constantw -> e
    android.graphics.drawable.Drawable val$placeholder -> f
    void handleMessage(android.os.Message) -> handleMessage
com.mapplas.utils.image.DrawableBackgroundDownloader$2 -> com.mapplas.utils.b.c:
    com.mapplas.utils.image.DrawableBackgroundDownloader this$0 -> a
    java.lang.String val$url -> b
    android.widget.ImageView val$imageView -> c
    android.os.Handler val$handler -> d
    void run() -> run
com.mapplas.utils.image.PixelDensityImageChooser -> com.mapplas.utils.b.d:
    android.content.Context context -> a
    java.lang.String getImageUrlDependingOnDensity(java.lang.String) -> a
com.mapplas.utils.image.SynchronousImageLoader -> com.mapplas.utils.b.e:
    android.graphics.Bitmap loadImage(com.mapplas.utils.cache.CacheFolder,java.lang.String) -> a
com.mapplas.utils.language.LanguageDialogCreator -> com.mapplas.utils.c.a:
    android.content.Context context -> a
    com.mapplas.utils.visual.dialogs.LanguageDialogInterface languageInterface -> b
    com.mapplas.utils.network.async_tasks.AppGetterTask theClass -> c
    void createLanguageListDialog() -> a
    com.mapplas.utils.visual.dialogs.LanguageDialogInterface access$0(com.mapplas.utils.language.LanguageDialogCreator) -> a
    android.content.Context access$1(com.mapplas.utils.language.LanguageDialogCreator) -> b
    void access$2(com.mapplas.utils.language.LanguageDialogCreator,com.mapplas.utils.visual.dialogs.LanguageDialogInterface) -> a
    com.mapplas.utils.network.async_tasks.AppGetterTask access$3(com.mapplas.utils.language.LanguageDialogCreator) -> c
com.mapplas.utils.language.LanguageDialogCreator$1 -> com.mapplas.utils.c.b:
    com.mapplas.utils.language.LanguageDialogCreator this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.mapplas.utils.language.LanguageSetter -> com.mapplas.utils.c.c:
    android.app.Activity activity -> a
    void setLanguageToApp(java.lang.String) -> a
com.mapplas.utils.location.AroundRequester -> com.mapplas.utils.d.a:
    com.mapplas.utils.location.UserLocationRequester userLocationRequester -> a
    android.content.Context context -> b
    android.widget.TextView listViewHeaderStatusMessage -> c
    android.widget.ImageView listViewHeaderImage -> d
    com.mapplas.model.SuperModel model -> e
    com.mapplas.utils.third_party.RefreshableListView listView -> f
    com.mapplas.app.adapters.app.AppAdapter appAdapter -> g
    java.util.ArrayList appsInstalledList -> h
    com.mapplas.app.activities.MapplasActivity mainActivity -> i
    void start() -> a
    void locationSearchEnded(android.location.Location) -> a
    void locationSearchDidTimeout(android.location.Location) -> b
    void loadTasks$2be49bc9(android.location.Location) -> c
com.mapplas.utils.location.UserLocationListener -> com.mapplas.utils.d.b:
    void locationSearchEnded(android.location.Location) -> a
    void locationSearchDidTimeout(android.location.Location) -> b
com.mapplas.utils.location.UserLocationRequester -> com.mapplas.utils.d.c:
    int TIMEOUT_MESSAGE_ID -> d
    long LOCATION_AGE_IN_SECONDS -> e
    android.location.LocationManager manager -> a
    com.mapplas.utils.location.UserLocationListener listener -> b
    int locationTimeout -> f
    android.location.Location currentBestLocation -> c
    android.os.Handler timerHandler -> g
    boolean locationSearched -> h
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    boolean handleMessage(android.os.Message) -> handleMessage
    void startListeningForLocationUpdates() -> a
    void stopListeningForLocationUpdates() -> c
    void resetLocationBoolean() -> b
    void restart() -> d
com.mapplas.utils.location.UserLocationRequesterFactory -> com.mapplas.utils.d.d:
com.mapplas.utils.network.NetworkConnectionChecker -> com.mapplas.utils.e.a:
    boolean isWifiConnected(android.content.Context) -> a
    boolean isNetworkConnectionConnected(android.content.Context) -> b
com.mapplas.utils.network.async_tasks.AppDetailTask -> com.mapplas.utils.e.a.a:
    com.mapplas.app.activities.AppDetail appDetail -> a
    com.mapplas.model.App app -> b
    java.lang.String countryCode -> c
    android.content.Context context -> d
    java.lang.String doInBackground$606be067() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mapplas.utils.network.async_tasks.AppGetterTask -> com.mapplas.utils.e.a.b:
    android.content.Context context -> a
    com.mapplas.model.SuperModel model -> b
    com.mapplas.app.adapters.app.AppAdapter listViewAdapter -> c
    com.mapplas.utils.third_party.RefreshableListView listView -> d
    java.util.ArrayList appsInstalledInfo -> e
    java.util.concurrent.Semaphore semaphore -> f
    boolean occupied -> g
    com.mapplas.app.activities.MapplasActivity mainActivity -> h
    android.location.Location doInBackground(java.lang.Object[]) -> a
    void afterLanguageCheck() -> d
    void onDialogEnglishLanguageClick() -> a
    void onDialogSpanishLanguageClick() -> b
    void onDialogBasqueLanguageClick() -> c
    void updateLanguage(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mapplas.utils.network.async_tasks.AsyncTaskHandler -> com.mapplas.utils.e.a.c:
    void execute() -> a
    void finished() -> b
com.mapplas.utils.network.async_tasks.AsyncTaskListener -> com.mapplas.utils.e.a.d:
com.mapplas.utils.network.async_tasks.LoadImageTask -> com.mapplas.utils.e.a.e:
    android.content.Context context -> a
    java.lang.String path -> b
    android.widget.ImageView imageView -> c
    com.mapplas.utils.cache.ImageFileManager imageFileManager -> d
    void execute() -> a
    void finished() -> b
com.mapplas.utils.network.async_tasks.MoreFromDeveloperTask -> com.mapplas.utils.e.a.f:
    com.mapplas.app.activities.MoreFromDeveloperActivity moreFromDevActivity -> a
    com.mapplas.model.App app -> b
    java.lang.String countryCode -> c
    android.content.Context context -> d
    java.lang.String doInBackground$606be067() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mapplas.utils.network.async_tasks.ReverseGeocodingTask -> com.mapplas.utils.e.a.g:
    android.content.Context context -> a
    com.mapplas.model.SuperModel model -> b
    android.widget.TextView listViewHeaderStatusMessage -> c
    java.lang.String doInBackground(android.location.Location[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mapplas.utils.network.async_tasks.TaskAsyncExecuter -> com.mapplas.utils.e.a.h:
    com.mapplas.utils.network.async_tasks.AsyncTaskHandler task -> a
    com.mapplas.utils.network.async_tasks.AsyncTaskListener listener -> b
    void onCancelled() -> onCancelled
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mapplas.utils.network.async_tasks.UserPinBlocksTask -> com.mapplas.utils.e.a.i:
    android.widget.ListView listView -> a
    android.content.Context context -> b
    int textViewResourceId -> c
    android.widget.LinearLayout refreshListBackgroundFooter -> d
    com.mapplas.model.User user -> e
    com.mapplas.model.AppOrderedList appOrderedList -> f
    java.lang.String doInBackground$606be067() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mapplas.utils.network.async_tasks.UserPlayStoreInteractionTask -> com.mapplas.utils.e.a.j:
    java.lang.String appId -> a
    int userId -> b
    android.location.Location location -> c
    java.lang.Void doInBackground$10299ca() -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.mapplas.utils.network.connectors.AppDetailConnector -> com.mapplas.utils.e.b.a:
    java.lang.String request(java.lang.String,java.lang.String) -> a
com.mapplas.utils.network.connectors.AppGetterConnector -> com.mapplas.utils.e.b.b:
    java.lang.String request(android.location.Location,com.mapplas.model.SuperModel,boolean,android.content.Context) -> a
com.mapplas.utils.network.connectors.AppShareConnector -> com.mapplas.utils.e.b.c:
    java.lang.String request(java.lang.String,int,android.location.Location) -> a
com.mapplas.utils.network.connectors.BlockRequestConnector -> com.mapplas.utils.e.b.d:
    java.lang.String request(java.lang.String,java.lang.String,java.lang.String) -> a
com.mapplas.utils.network.connectors.MoreFromDeveloperConnector -> com.mapplas.utils.e.b.e:
    java.lang.String request(java.lang.String,java.lang.String) -> a
com.mapplas.utils.network.connectors.PinRequestConnector -> com.mapplas.utils.e.b.f:
    java.lang.String request(java.lang.String,java.lang.String,java.lang.String,double,double,java.lang.String) -> a
com.mapplas.utils.network.connectors.UserIdentificationConnector -> com.mapplas.utils.e.b.g:
    java.lang.String request(java.lang.String) -> a
com.mapplas.utils.network.connectors.UserPinBlocksConnector -> com.mapplas.utils.e.b.h:
    java.lang.String request(java.lang.String) -> a
com.mapplas.utils.network.connectors.UserPlayStoreInteractionConnector -> com.mapplas.utils.e.b.i:
    java.lang.String request(java.lang.String,int,android.location.Location) -> a
com.mapplas.utils.network.mappers.JsonToAppDetailMapper -> com.mapplas.utils.e.c.a:
    android.content.Context context -> a
    void map(org.json.JSONObject,java.lang.Object) -> a
    void parseScreenshots(java.lang.String,com.mapplas.model.App) -> a
com.mapplas.utils.network.mappers.JsonToAppMapper -> com.mapplas.utils.e.c.b:
    android.content.Context context -> a
    java.util.ArrayList map(org.json.JSONArray) -> a
    com.mapplas.model.App map(org.json.JSONObject) -> a
com.mapplas.utils.network.mappers.JsonToAppReponseMapper -> com.mapplas.utils.e.c.c:
    boolean resetPagination -> a
    android.content.Context context -> b
    void setResetPagination(boolean,android.content.Context) -> a
    void map(org.json.JSONObject,java.lang.Object) -> a
    void setMockedAppToList(com.mapplas.model.SuperModel) -> a
com.mapplas.utils.network.mappers.JsonToBlockedAppsMapper -> com.mapplas.utils.e.c.d:
    android.content.Context context -> a
    java.util.ArrayList map(org.json.JSONArray) -> a
com.mapplas.utils.network.mappers.JsonToMoreAppsMapper -> com.mapplas.utils.e.c.e:
    android.content.Context context -> a
    com.mapplas.model.MoreFromDeveloperApp map(org.json.JSONObject) -> a
com.mapplas.utils.network.mappers.JsonToMoreFromDeveloperActivityMapper -> com.mapplas.utils.e.c.f:
    android.content.Context context -> a
    void map(org.json.JSONObject,java.lang.Object) -> a
com.mapplas.utils.network.mappers.JsonToMoreFromDeveloperMapper -> com.mapplas.utils.e.c.g:
    java.util.ArrayList mapList -> a
    android.content.Context context -> b
    java.util.ArrayList map(org.json.JSONArray) -> a
com.mapplas.utils.network.mappers.JsonToPinnedAppsMapper -> com.mapplas.utils.e.c.h:
    android.content.Context context -> a
    java.util.ArrayList map(org.json.JSONArray) -> a
com.mapplas.utils.network.mappers.JsonToUserMapper -> com.mapplas.utils.e.c.i:
    com.mapplas.model.User map(org.json.JSONObject) -> a
com.mapplas.utils.network.mappers.generic.GenericMapper -> com.mapplas.utils.e.c.a.a:
    java.util.ArrayList mappers -> a
    void map(org.json.JSONObject,java.lang.Object) -> a
com.mapplas.utils.network.mappers.generic.base.KeyIntegerValueMapper -> com.mapplas.utils.e.c.a.a.a:
    java.lang.String key -> a
    java.lang.reflect.Method method -> b
    void map(org.json.JSONObject,java.lang.Object) -> a
com.mapplas.utils.network.mappers.generic.base.KeyValueScapedMapper -> com.mapplas.utils.e.c.a.a.b:
    java.lang.String key -> a
    java.lang.reflect.Method method -> b
    void map(org.json.JSONObject,java.lang.Object) -> a
com.mapplas.utils.network.mappers.generic.base.TargetMapper -> com.mapplas.utils.e.c.a.a.c:
    void map(org.json.JSONObject,java.lang.Object) -> a
com.mapplas.utils.network.requests.BlockRequestThread -> com.mapplas.utils.e.d.a:
    java.lang.String action -> a
    com.mapplas.model.App app -> b
    java.lang.String uid -> c
    java.lang.Runnable getThread() -> a
    java.lang.String access$0(com.mapplas.utils.network.requests.BlockRequestThread) -> a
    com.mapplas.model.App access$1(com.mapplas.utils.network.requests.BlockRequestThread) -> b
    java.lang.String access$2(com.mapplas.utils.network.requests.BlockRequestThread) -> c
com.mapplas.utils.network.requests.BlockRequestThread$1 -> com.mapplas.utils.e.d.b:
    com.mapplas.utils.network.requests.BlockRequestThread this$0 -> a
    void run() -> run
com.mapplas.utils.network.requests.PinRequestThread -> com.mapplas.utils.e.d.c:
    java.lang.String action -> a
    com.mapplas.model.App app -> b
    java.lang.String uid -> c
    android.location.Location currentLocation -> d
    java.lang.String reverseGeocodedLocation -> e
    java.lang.Runnable getThread() -> a
    android.location.Location access$0(com.mapplas.utils.network.requests.PinRequestThread) -> a
    java.lang.String access$1(com.mapplas.utils.network.requests.PinRequestThread) -> b
    com.mapplas.model.App access$2(com.mapplas.utils.network.requests.PinRequestThread) -> c
    java.lang.String access$3(com.mapplas.utils.network.requests.PinRequestThread) -> d
    java.lang.String access$4(com.mapplas.utils.network.requests.PinRequestThread) -> e
com.mapplas.utils.network.requests.PinRequestThread$1 -> com.mapplas.utils.e.d.d:
    com.mapplas.utils.network.requests.PinRequestThread this$0 -> a
    void run() -> run
com.mapplas.utils.network.requests.ShareRequestThread -> com.mapplas.utils.e.d.e:
    java.lang.String appId -> a
    int userId -> b
    android.location.Location location -> c
    java.lang.Runnable getThread() -> a
    java.lang.String access$0(com.mapplas.utils.network.requests.ShareRequestThread) -> a
    int access$1(com.mapplas.utils.network.requests.ShareRequestThread) -> b
    android.location.Location access$2(com.mapplas.utils.network.requests.ShareRequestThread) -> c
com.mapplas.utils.network.requests.ShareRequestThread$1 -> com.mapplas.utils.e.d.f:
    com.mapplas.utils.network.requests.ShareRequestThread this$0 -> a
    void run() -> run
com.mapplas.utils.network.requests.UserIdentificationRequester -> com.mapplas.utils.e.d.g:
    com.mapplas.model.SuperModel model -> a
    java.lang.Runnable getThread() -> a
    com.mapplas.model.SuperModel access$0(com.mapplas.utils.network.requests.UserIdentificationRequester) -> a
    void access$1(com.mapplas.utils.network.requests.UserIdentificationRequester) -> b
com.mapplas.utils.network.requests.UserIdentificationRequester$1 -> com.mapplas.utils.e.d.h:
    com.mapplas.utils.network.requests.UserIdentificationRequester this$0 -> a
    void run() -> run
com.mapplas.utils.static_intents.AppChangedSingleton -> com.mapplas.utils.f.a:
    boolean somethingChanged -> a
    com.mapplas.model.AppOrderedList changedList -> b
com.mapplas.utils.static_intents.AppRequestBeingDoneSingleton -> com.mapplas.utils.f.b:
    boolean requestBeingDone -> a
com.mapplas.utils.static_intents.SuperModelSingleton -> com.mapplas.utils.f.c:
    com.mapplas.model.SuperModel model -> a
com.mapplas.utils.third_party.RefreshableListView -> com.mapplas.utils.third_party.RefreshableListView:
    android.view.View mHeaderContainer -> a
    android.view.View mHeaderView -> b
    android.widget.ImageView mArrowOrRefresing -> c
    android.widget.TextView mText -> d
    float mY -> e
    float mHistoricalY -> f
    int mHistoricalTop -> g
    int mInitialHeight -> h
    boolean mFlag -> i
    boolean mArrowUp -> j
    boolean mIsRefreshing -> k
    int mHeaderHeight -> l
    com.mapplas.utils.third_party.RefreshableListView$OnRefreshListener mListener -> m
    android.view.animation.RotateAnimation reloadAnimation -> n
    int MINIMUM_HEADER_HEIGHT -> o
    android.os.Handler mHandler -> p
    void setOnRefreshListener(com.mapplas.utils.third_party.RefreshableListView$OnRefreshListener) -> a
    void completeRefreshing() -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void initialize() -> c
    android.widget.LinearLayout getHeader() -> b
    void setHeaderHeight(int) -> a
    void rotateArrow() -> d
    void updateAdapter$21178baf(com.mapplas.model.SuperModel) -> a
    int access$0(com.mapplas.utils.third_party.RefreshableListView) -> a
    void access$1(com.mapplas.utils.third_party.RefreshableListView,int) -> a
    android.os.Handler access$2(com.mapplas.utils.third_party.RefreshableListView) -> b
com.mapplas.utils.third_party.RefreshableListView$1 -> com.mapplas.utils.third_party.a:
    com.mapplas.utils.third_party.RefreshableListView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mapplas.utils.third_party.RefreshableListView$OnRefreshListener -> com.mapplas.utils.third_party.b:
    void onRefresh$674d34c6() -> a
com.mapplas.utils.view_holder.AppViewHolder -> com.mapplas.utils.g.a:
    android.widget.ImageView logo -> a
    android.widget.ImageView logoRoundCorner -> b
    android.widget.TextView title -> c
    android.widget.TextView shortDescription -> d
    android.widget.TextView pinUp -> e
    android.widget.TextView rate -> f
    android.widget.TextView share -> g
    android.widget.TextView block -> h
    android.widget.ImageView pinUpImg -> i
    android.widget.ImageView rateImg -> j
    android.widget.ImageView shareImg -> k
    android.widget.ImageView blockImg -> l
    android.widget.LinearLayout pinUpLayout -> m
    android.widget.LinearLayout rateLayout -> n
    android.widget.LinearLayout shareLayout -> o
    android.widget.LinearLayout blockLayout -> p
    android.widget.Button buttonStart -> q
    android.widget.ViewFlipper viewFlipper -> r
    android.widget.LinearLayout rowUnpressed -> s
com.mapplas.utils.visual.custom_views.RobotoButton -> com.mapplas.utils.visual.custom_views.RobotoButton:
    void init() -> a
com.mapplas.utils.visual.custom_views.RobotoTextView -> com.mapplas.utils.visual.custom_views.RobotoTextView:
    void init() -> a
com.mapplas.utils.visual.dialogs.LanguageDialogInterface -> com.mapplas.utils.visual.a.a:
    void onDialogEnglishLanguageClick() -> a
    void onDialogSpanishLanguageClick() -> b
    void onDialogBasqueLanguageClick() -> c
com.mapplas.utils.visual.helpers.AppLaunchHelper -> com.mapplas.utils.visual.b.a:
    android.content.Context context -> a
    android.widget.Button button -> b
    com.mapplas.model.App app -> c
    com.mapplas.model.User user -> d
    android.location.Location location -> e
    void help() -> a
    android.content.Context access$0(com.mapplas.utils.visual.helpers.AppLaunchHelper) -> a
    com.mapplas.model.App access$1(com.mapplas.utils.visual.helpers.AppLaunchHelper) -> b
    com.mapplas.model.User access$2(com.mapplas.utils.visual.helpers.AppLaunchHelper) -> c
    android.location.Location access$3(com.mapplas.utils.visual.helpers.AppLaunchHelper) -> d
com.mapplas.utils.visual.helpers.AppLaunchHelper$1 -> com.mapplas.utils.visual.b.b:
    com.mapplas.utils.visual.helpers.AppLaunchHelper this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.utils.visual.helpers.ListViewInsideScrollHeigthHelper -> com.mapplas.utils.visual.b.c:
com.mapplas.utils.visual.helpers.PlayStoreLinkCreator -> com.mapplas.utils.visual.b.d:
    java.lang.String createLinkForApp(java.lang.String) -> a
com.mapplas.utils.visual.helpers.ShareHelper -> com.mapplas.utils.visual.b.e:
    android.content.Intent getSharingIntent(android.content.Context,com.mapplas.model.App) -> a
com.mapplas.utils.visual.presenters.UserFormDynamicSublistsPresenter -> com.mapplas.utils.visual.c.a:
    com.mapplas.model.UserFormLayoutComponents layoutComponents -> a
    android.widget.ListView list -> b
    android.content.Context context -> c
    com.mapplas.model.User user -> d
    com.mapplas.model.AppOrderedList appOrderedList -> e
    void present() -> a
    android.widget.ListView access$0(com.mapplas.utils.visual.presenters.UserFormDynamicSublistsPresenter) -> a
    com.mapplas.model.UserFormLayoutComponents access$1(com.mapplas.utils.visual.presenters.UserFormDynamicSublistsPresenter) -> b
    android.content.Context access$2(com.mapplas.utils.visual.presenters.UserFormDynamicSublistsPresenter) -> c
    com.mapplas.model.User access$3(com.mapplas.utils.visual.presenters.UserFormDynamicSublistsPresenter) -> d
    com.mapplas.model.AppOrderedList access$4(com.mapplas.utils.visual.presenters.UserFormDynamicSublistsPresenter) -> e
com.mapplas.utils.visual.presenters.UserFormDynamicSublistsPresenter$1 -> com.mapplas.utils.visual.c.b:
    com.mapplas.utils.visual.presenters.UserFormDynamicSublistsPresenter this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.utils.visual.presenters.UserFormDynamicSublistsPresenter$2 -> com.mapplas.utils.visual.c.c:
    com.mapplas.utils.visual.presenters.UserFormDynamicSublistsPresenter this$0 -> a
    void onClick(android.view.View) -> onClick
com.mapplas.utils.webView.TouchableScrollView -> com.mapplas.utils.webView.TouchableScrollView:
    android.widget.RelativeLayout navBar -> a
    android.app.ProgressDialog progressDialog -> b
    android.view.animation.Animation fadeOutAnimation -> c
    android.view.animation.Animation fadeInAnimation -> d
    void setNavBar(android.widget.RelativeLayout) -> a
    void setProgressDialog(android.app.ProgressDialog) -> a
    void stopDialogAndStartAnimation() -> a
    void onScrollChanged(int,int,int,int) -> onScrollChanged
    void setTimerToNavigationBar() -> b
    android.widget.RelativeLayout access$0(com.mapplas.utils.webView.TouchableScrollView) -> a
    android.view.animation.Animation access$1(com.mapplas.utils.webView.TouchableScrollView) -> b
com.mapplas.utils.webView.TouchableScrollView$1 -> com.mapplas.utils.webView.a:
    com.mapplas.utils.webView.TouchableScrollView this$0 -> a
    void run() -> run
com.mapplas.utils.webView.TouchableScrollView$2 -> com.mapplas.utils.webView.b:
    com.mapplas.utils.webView.TouchableScrollView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.mapplas.utils.webView.TouchableScrollView$3 -> com.mapplas.utils.webView.c:
    com.mapplas.utils.webView.TouchableScrollView this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
org.apache.commons.lang3.ArrayUtils -> a.a.a.a.a:
    java.lang.Object[] EMPTY_OBJECT_ARRAY -> a
    java.lang.Class[] EMPTY_CLASS_ARRAY -> b
    java.lang.String[] EMPTY_STRING_ARRAY -> c
    long[] EMPTY_LONG_ARRAY -> d
    java.lang.Long[] EMPTY_LONG_OBJECT_ARRAY -> e
    int[] EMPTY_INT_ARRAY -> f
    java.lang.Integer[] EMPTY_INTEGER_OBJECT_ARRAY -> g
    short[] EMPTY_SHORT_ARRAY -> h
    java.lang.Short[] EMPTY_SHORT_OBJECT_ARRAY -> i
    byte[] EMPTY_BYTE_ARRAY -> j
    java.lang.Byte[] EMPTY_BYTE_OBJECT_ARRAY -> k
    double[] EMPTY_DOUBLE_ARRAY -> l
    java.lang.Double[] EMPTY_DOUBLE_OBJECT_ARRAY -> m
    float[] EMPTY_FLOAT_ARRAY -> n
    java.lang.Float[] EMPTY_FLOAT_OBJECT_ARRAY -> o
    boolean[] EMPTY_BOOLEAN_ARRAY -> p
    java.lang.Boolean[] EMPTY_BOOLEAN_OBJECT_ARRAY -> q
    char[] EMPTY_CHAR_ARRAY -> r
    java.lang.Character[] EMPTY_CHARACTER_OBJECT_ARRAY -> s
    java.lang.Object[] clone(java.lang.Object[]) -> a
    boolean isEmpty(char[]) -> a
org.apache.commons.lang3.StringEscapeUtils -> a.a.a.a.b:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_JAVA -> a
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_ECMASCRIPT -> b
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_XML -> c
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML3 -> d
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_HTML4 -> e
    org.apache.commons.lang3.text.translate.CharSequenceTranslator ESCAPE_CSV -> f
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_JAVA -> g
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_ECMASCRIPT -> h
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML3 -> i
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_HTML4 -> j
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_XML -> k
    org.apache.commons.lang3.text.translate.CharSequenceTranslator UNESCAPE_CSV -> l
    java.lang.String unescapeHtml4(java.lang.String) -> a
org.apache.commons.lang3.StringEscapeUtils$CsvEscaper -> a.a.a.a.c:
    java.lang.String CSV_QUOTE_STR -> a
    char[] CSV_SEARCH_CHARS -> b
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper -> a.a.a.a.d:
    java.lang.String CSV_QUOTE_STR -> a
    char[] CSV_SEARCH_CHARS -> b
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.StringUtils -> a.a.a.a.e:
    java.util.regex.Pattern WHITESPACE_BLOCK -> a
    boolean sunAvailable -> b
    java.lang.reflect.Method sunDecomposeMethod -> c
    java.util.regex.Pattern sunPattern -> d
    boolean java6Available -> e
    java.lang.reflect.Method java6NormalizeMethod -> f
    java.lang.Object java6NormalizerFormNFD -> g
    java.util.regex.Pattern java6Pattern -> h
    boolean isEmpty(java.lang.CharSequence) -> a
    boolean containsAny(java.lang.CharSequence,char[]) -> a
    boolean containsNone(java.lang.CharSequence,char[]) -> b
    java.lang.String replace(java.lang.String,java.lang.String,java.lang.String) -> a
org.apache.commons.lang3.text.translate.AggregateTranslator -> a.a.a.a.a.a.a:
    org.apache.commons.lang3.text.translate.CharSequenceTranslator[] translators -> a
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.CharSequenceTranslator -> a.a.a.a.a.a.b:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
    java.lang.String translate(java.lang.CharSequence) -> a
    void translate(java.lang.CharSequence,java.io.Writer) -> a
    org.apache.commons.lang3.text.translate.CharSequenceTranslator with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[]) -> a
    java.lang.String hex(int) -> a
org.apache.commons.lang3.text.translate.CodePointTranslator -> a.a.a.a.a.a.c:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
    boolean translate(int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.EntityArrays -> a.a.a.a.a.a.d:
    java.lang.String[][] ISO8859_1_ESCAPE -> a
    java.lang.String[][] ISO8859_1_UNESCAPE -> b
    java.lang.String[][] HTML40_EXTENDED_ESCAPE -> c
    java.lang.String[][] HTML40_EXTENDED_UNESCAPE -> d
    java.lang.String[][] BASIC_ESCAPE -> e
    java.lang.String[][] BASIC_UNESCAPE -> f
    java.lang.String[][] APOS_ESCAPE -> g
    java.lang.String[][] APOS_UNESCAPE -> h
    java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE -> i
    java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE -> j
    java.lang.String[][] ISO8859_1_ESCAPE() -> a
    java.lang.String[][] ISO8859_1_UNESCAPE() -> b
    java.lang.String[][] HTML40_EXTENDED_ESCAPE() -> c
    java.lang.String[][] HTML40_EXTENDED_UNESCAPE() -> d
    java.lang.String[][] BASIC_ESCAPE() -> e
    java.lang.String[][] BASIC_UNESCAPE() -> f
    java.lang.String[][] APOS_ESCAPE() -> g
    java.lang.String[][] APOS_UNESCAPE() -> h
    java.lang.String[][] JAVA_CTRL_CHARS_ESCAPE() -> i
    java.lang.String[][] JAVA_CTRL_CHARS_UNESCAPE() -> j
    java.lang.String[][] invert(java.lang.String[][]) -> a
org.apache.commons.lang3.text.translate.LookupTranslator -> a.a.a.a.a.a.e:
    java.util.HashMap lookupMap -> a
    int shortest -> b
    int longest -> c
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.NumericEntityUnescaper -> a.a.a.a.a.a.f:
    java.util.EnumSet options -> a
    boolean isSet(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION) -> a
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION -> a.a.a.a.a.a.g:
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonRequired -> a
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION semiColonOptional -> b
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION errorIfNoSemiColon -> c
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] $VALUES -> d
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[] values() -> values
    org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION valueOf(java.lang.String) -> valueOf
org.apache.commons.lang3.text.translate.OctalUnescaper -> a.a.a.a.a.a.h:
    int OCTAL_MAX -> a
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.UnicodeEscaper -> a.a.a.a.a.a.i:
    int below -> a
    int above -> b
    boolean between -> c
    org.apache.commons.lang3.text.translate.UnicodeEscaper outsideOf$d81c0a0() -> a
    boolean translate(int,java.io.Writer) -> a
org.apache.commons.lang3.text.translate.UnicodeUnescaper -> a.a.a.a.a.a.j:
    int translate(java.lang.CharSequence,int,java.io.Writer) -> a
